/*
 * Copyright (c) 2023 Texas Instruments Incorporated
 * Copyright (c) 2023 Excelfore Corporation (https://excelfore.com)
 *
 * All rights reserved not granted herein.
 * Limited License.
 *
 * Texas Instruments Incorporated grants a world-wide, royalty-free,
 * non-exclusive license under copyrights and patents it now or hereafter
 * owns or controls to make, have made, use, import, offer to sell and sell ("Utilize")
 * this software subject to the terms herein. With respect to the foregoing patent
 * license, such license is granted solely to the extent that any such patent is necessary
 * to Utilize the software alone. The patent license shall not apply to any combinations which
 * include this software, other than combinations with devices manufactured by or for TI ("TI Devices").
 * No hardware patent is licensed hereunder.
 *
 * Redistributions must preserve existing copyright notices and reproduce this license (including the
 * above copyright notice and the disclaimer and (if applicable) source code license limitations below)
 * in the documentation and/or other materials provided with the distribution
 *
 * Redistribution and use in binary form, without modification, are permitted provided that the following
 * conditions are met:
 *
 * * No reverse engineering, decompilation, or disassembly of this software is permitted with respect to any
 * software provided in binary form.
 * * any redistribution and use are licensed by TI for use only with TI Devices.
 * * Nothing shall obligate TI to provide you with source code for the software licensed and provided to you in object code.
 *
 * If software source code is provided to you, modification and redistribution of the source code are permitted
 * provided that the following conditions are met:
 *
 * * any redistribution and use of the source code, including any resulting derivative works, are licensed by
 * TI for use only with TI Devices.
 * * any redistribution and use of any object code compiled from the source code and any resulting derivative
 * works, are licensed by TI for use only with TI Devices.
 *
 * Neither the name of Texas Instruments Incorporated nor the names of its suppliers may be used to endorse or
 * promote products derived from this software without specific prior written permission.
 *
 * DISCLAIMER.
 *
 * THIS SOFTWARE IS PROVIDED BY TI AND TI"S LICENSORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
 * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL TI AND TI"S LICENSORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
 * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
*/

#ifndef _H_u_ieee802_dot1q_tsn_config_uni
#define _H_u_ieee802_dot1q_tsn_config_uni
/*
 * Copyright (c) 2008 - 2012, Andy Bierman, All Rights Reserved.
 * Copyright (c) 2012 - 2022, YumaWorks, Inc., All Rights Reserved.
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
 */

/**
 * @file u_ieee802-dot1q-tsn-config-uni.h
 * @brief User SIL-SA header for module ieee802-dot1q-tsn-config-uni
 *

*** Generated by yangdump-sdk 21.10-12

<pre>

    User SIL-SA header
    bundle x4ucsilsa
    module ieee802-dot1q-tsn-config-uni
    revision 2022-11-09
    prefix dot1q-tsn-config-uni
    namespace urn:ieee:std:802.1Q:yang:ieee802-dot1q-tsn-config-uni
    organization Institute of Electrical and Electronics Engineers
    Created: 2023-03-29T06:45:58Z

Online Developer Manual:
https://www.yumaworks.com/pub/21.10/dev/yumapro-dev-manual.html

    CLI parameters:
        defnames true
        deviation excelfore-interfaces
        deviation excelfore-gptp
        format uh
        indent 4
        module ietf-interfaces
        module ieee802-dot1q-bridge
        module ieee802-dot1q-tsn-config-uni
        module excelfore-interfaces
        module ieee1588-ptp
        module ieee802-dot1as-ptp
        module excelfore-gptp
        sil-bundle x4ucsilsa
        sil-edit2
        sil-get2
        sil-include tsn_uniconf/yangs/yang_db_access.h
        sil-include tsn_uniconf/yangs/yang_modules.h
        sil-sa
        unified true
</pre>

 */

#include <xmlstring.h>

#include "procdefs.h"
#include "agt.h"
#include "agt_cb.h"
#include "agt_not.h"
#include "agt_rpc.h"
#include "dlq.h"
#include "ncxtypes.h"
#include "op.h"
#include "rpc.h"
#include "ses.h"
#include "status.h"
#include "val.h"
#include "y_ieee802-dot1q-tsn-config-uni.h"
#include "u_ietf-interfaces.h"
#include "u_ieee802-dot1q-bridge.h"
#include "u_excelfore-interfaces.h"
#include "u_ieee1588-ptp.h"
#include "u_ieee802-dot1as-ptp.h"
#include "u_excelfore-gptp.h"

#ifdef __cplusplus
extern "C" {
#endif

/**
 * @addtogroup yang-library YANG Library
 *
 * Collection of modules supported by the server.
 * Generated by yangdump-sdk.
 */



/**
 * @addtogroup silsa-x4ucsilsa-ieee802-dot1q-tsn-config-uni Module ieee802-dot1q-tsn-config-uni in Bundle x4ucsilsa
 * @ingroup silsa-x4ucsilsa
 *
 * @{
 *
 * YANG instrumentation library.
 * Generated by yangdump-sdk.
 */



/* container /tsn-uni/domain/cuc/stream/talker/stream-rank */
typedef struct y_dot1q_tsn_config_uni_T_stream_rank_ {
    uint8 v_rank;
} y_dot1q_tsn_config_uni_T_stream_rank;

/* list /tsn-uni/domain/cuc/stream/talker/end-station-interfaces */
typedef struct y_dot1q_tsn_config_uni_T_end_station_interfaces_ {
    dlq_hdr_t qhdr;
    xmlChar *v_mac_address;
    xmlChar *v_interface_name;
} y_dot1q_tsn_config_uni_T_end_station_interfaces;

/* container /tsn-uni/domain/cuc/stream/talker/data-frame-specification/field/ieee802-mac-addresses/ieee802-mac-addresses */
typedef struct y_dot1q_tsn_config_uni_T_ieee802_mac_addresses_1_ {
    xmlChar *v_destination_mac_address;
    xmlChar *v_source_mac_address;
} y_dot1q_tsn_config_uni_T_ieee802_mac_addresses_1;

/* case /tsn-uni/domain/cuc/stream/talker/data-frame-specification/field/ieee802-mac-addresses */
typedef struct y_dot1q_tsn_config_uni_T_ieee802_mac_addresses_ {
    y_dot1q_tsn_config_uni_T_ieee802_mac_addresses_1 v_ieee802_mac_addresses;
} y_dot1q_tsn_config_uni_T_ieee802_mac_addresses;

/* container /tsn-uni/domain/cuc/stream/talker/data-frame-specification/field/ieee802-vlan-tag/ieee802-vlan-tag */
typedef struct y_dot1q_tsn_config_uni_T_ieee802_vlan_tag_1_ {
    uint8 v_priority_code_point;
    uint16 v_vlan_id;
} y_dot1q_tsn_config_uni_T_ieee802_vlan_tag_1;

/* case /tsn-uni/domain/cuc/stream/talker/data-frame-specification/field/ieee802-vlan-tag */
typedef struct y_dot1q_tsn_config_uni_T_ieee802_vlan_tag_ {
    y_dot1q_tsn_config_uni_T_ieee802_vlan_tag_1 v_ieee802_vlan_tag;
} y_dot1q_tsn_config_uni_T_ieee802_vlan_tag;

/* container /tsn-uni/domain/cuc/stream/talker/data-frame-specification/field/ipv4-tuple/ipv4-tuple */
typedef struct y_dot1q_tsn_config_uni_T_ipv4_tuple_1_ {
    xmlChar *v_source_ip_address;
    xmlChar *v_destination_ip_address;
    uint8 v_dscp;
    uint16 v_protocol;
    uint16 v_source_port;
    uint16 v_destination_port;
} y_dot1q_tsn_config_uni_T_ipv4_tuple_1;

/* case /tsn-uni/domain/cuc/stream/talker/data-frame-specification/field/ipv4-tuple */
typedef struct y_dot1q_tsn_config_uni_T_ipv4_tuple_ {
    y_dot1q_tsn_config_uni_T_ipv4_tuple_1 v_ipv4_tuple;
} y_dot1q_tsn_config_uni_T_ipv4_tuple;

/* container /tsn-uni/domain/cuc/stream/talker/data-frame-specification/field/ipv6-tuple/ipv6-tuple */
typedef struct y_dot1q_tsn_config_uni_T_ipv6_tuple_1_ {
    xmlChar *v_source_ip_address;
    xmlChar *v_destination_ip_address;
    uint8 v_dscp;
    uint16 v_protocol;
    uint16 v_source_port;
    uint16 v_destination_port;
} y_dot1q_tsn_config_uni_T_ipv6_tuple_1;

/* case /tsn-uni/domain/cuc/stream/talker/data-frame-specification/field/ipv6-tuple */
typedef struct y_dot1q_tsn_config_uni_T_ipv6_tuple_ {
    y_dot1q_tsn_config_uni_T_ipv6_tuple_1 v_ipv6_tuple;
} y_dot1q_tsn_config_uni_T_ipv6_tuple;

/* choice /tsn-uni/domain/cuc/stream/talker/data-frame-specification/field */
typedef union y_dot1q_tsn_config_uni_T_field_ {
    y_dot1q_tsn_config_uni_T_ieee802_mac_addresses v_ieee802_mac_addresses;
    y_dot1q_tsn_config_uni_T_ieee802_vlan_tag v_ieee802_vlan_tag;
    y_dot1q_tsn_config_uni_T_ipv4_tuple v_ipv4_tuple;
    y_dot1q_tsn_config_uni_T_ipv6_tuple v_ipv6_tuple;
} y_dot1q_tsn_config_uni_T_field;

/* list /tsn-uni/domain/cuc/stream/talker/data-frame-specification */
typedef struct y_dot1q_tsn_config_uni_T_data_frame_specification_ {
    dlq_hdr_t qhdr;
    uint8 v_index;
    y_dot1q_tsn_config_uni_T_field v_field;
} y_dot1q_tsn_config_uni_T_data_frame_specification;

/* container /tsn-uni/domain/cuc/stream/talker/traffic-specification/interval */
typedef struct y_dot1q_tsn_config_uni_T_interval_ {
    uint32 v_numerator;
    uint32 v_denominator;
} y_dot1q_tsn_config_uni_T_interval;

/* container /tsn-uni/domain/cuc/stream/talker/traffic-specification/time-aware */
typedef struct y_dot1q_tsn_config_uni_T_time_aware_ {
    uint32 v_earliest_transmit_offset;
    uint32 v_latest_transmit_offset;
    uint32 v_jitter;
} y_dot1q_tsn_config_uni_T_time_aware;

/* container /tsn-uni/domain/cuc/stream/talker/traffic-specification */
typedef struct y_dot1q_tsn_config_uni_T_traffic_specification_ {
    y_dot1q_tsn_config_uni_T_interval v_interval;
    uint16 v_max_frames_per_interval;
    uint16 v_max_frame_size;
    uint8 v_transmission_selection;
    y_dot1q_tsn_config_uni_T_time_aware v_time_aware;
} y_dot1q_tsn_config_uni_T_traffic_specification;

/* container /tsn-uni/domain/cuc/stream/talker/user-to-network-requirements */
typedef struct y_dot1q_tsn_config_uni_T_user_to_network_requirements_ {
    uint8 v_num_seamless_trees;
    uint32 v_max_latency;
} y_dot1q_tsn_config_uni_T_user_to_network_requirements;

/* leaf-list /tsn-uni/domain/cuc/stream/talker/interface-capabilities/cb-stream-iden-type-list */
typedef struct y_dot1q_tsn_config_uni_T_cb_stream_iden_type_list_ {
    dlq_hdr_t qhdr;
    uint32 v_cb_stream_iden_type_list;
} y_dot1q_tsn_config_uni_T_cb_stream_iden_type_list;

/* leaf-list /tsn-uni/domain/cuc/stream/talker/interface-capabilities/cb-sequence-type-list */
typedef struct y_dot1q_tsn_config_uni_T_cb_sequence_type_list_ {
    dlq_hdr_t qhdr;
    uint32 v_cb_sequence_type_list;
} y_dot1q_tsn_config_uni_T_cb_sequence_type_list;

/* container /tsn-uni/domain/cuc/stream/talker/interface-capabilities */
typedef struct y_dot1q_tsn_config_uni_T_interface_capabilities_ {
    boolean v_vlan_tag_capable;
    dlq_hdr_t v_cb_stream_iden_type_list;
    dlq_hdr_t v_cb_sequence_type_list;
} y_dot1q_tsn_config_uni_T_interface_capabilities;

/* container /tsn-uni/domain/cuc/stream/talker/interface-configuration/interface-list/config-list/config-value/ieee802-mac-addresses/ieee802-mac-addresses */
typedef struct y_dot1q_tsn_config_uni_T_ieee802_mac_addresses_3_ {
    xmlChar *v_destination_mac_address;
    xmlChar *v_source_mac_address;
} y_dot1q_tsn_config_uni_T_ieee802_mac_addresses_3;

/* case /tsn-uni/domain/cuc/stream/talker/interface-configuration/interface-list/config-list/config-value/ieee802-mac-addresses */
typedef struct y_dot1q_tsn_config_uni_T_ieee802_mac_addresses_2_ {
    y_dot1q_tsn_config_uni_T_ieee802_mac_addresses_3 v_ieee802_mac_addresses;
} y_dot1q_tsn_config_uni_T_ieee802_mac_addresses_2;

/* container /tsn-uni/domain/cuc/stream/talker/interface-configuration/interface-list/config-list/config-value/ieee802-vlan-tag/ieee802-vlan-tag */
typedef struct y_dot1q_tsn_config_uni_T_ieee802_vlan_tag_3_ {
    uint8 v_priority_code_point;
    uint16 v_vlan_id;
} y_dot1q_tsn_config_uni_T_ieee802_vlan_tag_3;

/* case /tsn-uni/domain/cuc/stream/talker/interface-configuration/interface-list/config-list/config-value/ieee802-vlan-tag */
typedef struct y_dot1q_tsn_config_uni_T_ieee802_vlan_tag_2_ {
    y_dot1q_tsn_config_uni_T_ieee802_vlan_tag_3 v_ieee802_vlan_tag;
} y_dot1q_tsn_config_uni_T_ieee802_vlan_tag_2;

/* container /tsn-uni/domain/cuc/stream/talker/interface-configuration/interface-list/config-list/config-value/ipv4-tuple/ipv4-tuple */
typedef struct y_dot1q_tsn_config_uni_T_ipv4_tuple_3_ {
    xmlChar *v_source_ip_address;
    xmlChar *v_destination_ip_address;
    uint8 v_dscp;
    uint16 v_protocol;
    uint16 v_source_port;
    uint16 v_destination_port;
} y_dot1q_tsn_config_uni_T_ipv4_tuple_3;

/* case /tsn-uni/domain/cuc/stream/talker/interface-configuration/interface-list/config-list/config-value/ipv4-tuple */
typedef struct y_dot1q_tsn_config_uni_T_ipv4_tuple_2_ {
    y_dot1q_tsn_config_uni_T_ipv4_tuple_3 v_ipv4_tuple;
} y_dot1q_tsn_config_uni_T_ipv4_tuple_2;

/* container /tsn-uni/domain/cuc/stream/talker/interface-configuration/interface-list/config-list/config-value/ipv6-tuple/ipv6-tuple */
typedef struct y_dot1q_tsn_config_uni_T_ipv6_tuple_3_ {
    xmlChar *v_source_ip_address;
    xmlChar *v_destination_ip_address;
    uint8 v_dscp;
    uint16 v_protocol;
    uint16 v_source_port;
    uint16 v_destination_port;
} y_dot1q_tsn_config_uni_T_ipv6_tuple_3;

/* case /tsn-uni/domain/cuc/stream/talker/interface-configuration/interface-list/config-list/config-value/ipv6-tuple */
typedef struct y_dot1q_tsn_config_uni_T_ipv6_tuple_2_ {
    y_dot1q_tsn_config_uni_T_ipv6_tuple_3 v_ipv6_tuple;
} y_dot1q_tsn_config_uni_T_ipv6_tuple_2;

/* case /tsn-uni/domain/cuc/stream/talker/interface-configuration/interface-list/config-list/config-value/time-aware-offset */
typedef struct y_dot1q_tsn_config_uni_T_time_aware_offset_ {
    uint32 v_time_aware_offset;
} y_dot1q_tsn_config_uni_T_time_aware_offset;

/* choice /tsn-uni/domain/cuc/stream/talker/interface-configuration/interface-list/config-list/config-value */
typedef union y_dot1q_tsn_config_uni_T_config_value_ {
    y_dot1q_tsn_config_uni_T_ieee802_mac_addresses_2 v_ieee802_mac_addresses;
    y_dot1q_tsn_config_uni_T_ieee802_vlan_tag_2 v_ieee802_vlan_tag;
    y_dot1q_tsn_config_uni_T_ipv4_tuple_2 v_ipv4_tuple;
    y_dot1q_tsn_config_uni_T_ipv6_tuple_2 v_ipv6_tuple;
    y_dot1q_tsn_config_uni_T_time_aware_offset v_time_aware_offset;
} y_dot1q_tsn_config_uni_T_config_value;

/* list /tsn-uni/domain/cuc/stream/talker/interface-configuration/interface-list/config-list */
typedef struct y_dot1q_tsn_config_uni_T_config_list_ {
    dlq_hdr_t qhdr;
    uint8 v_index;
    y_dot1q_tsn_config_uni_T_config_value v_config_value;
} y_dot1q_tsn_config_uni_T_config_list;

/* list /tsn-uni/domain/cuc/stream/talker/interface-configuration/interface-list */
typedef struct y_dot1q_tsn_config_uni_T_interface_list_ {
    dlq_hdr_t qhdr;
    xmlChar *v_mac_address;
    xmlChar *v_interface_name;
    dlq_hdr_t v_config_list;
} y_dot1q_tsn_config_uni_T_interface_list;

/* container /tsn-uni/domain/cuc/stream/talker/interface-configuration */
typedef struct y_dot1q_tsn_config_uni_T_interface_configuration_ {
    dlq_hdr_t v_interface_list;
} y_dot1q_tsn_config_uni_T_interface_configuration;

/* container /tsn-uni/domain/cuc/stream/talker */
typedef struct y_dot1q_tsn_config_uni_T_talker_ {
    y_dot1q_tsn_config_uni_T_stream_rank v_stream_rank;
    dlq_hdr_t v_end_station_interfaces;
    dlq_hdr_t v_data_frame_specification;
    y_dot1q_tsn_config_uni_T_traffic_specification v_traffic_specification;
    y_dot1q_tsn_config_uni_T_user_to_network_requirements v_user_to_network_requirements;
    y_dot1q_tsn_config_uni_T_interface_capabilities v_interface_capabilities;
    uint32 v_accumulated_latency;
    y_dot1q_tsn_config_uni_T_interface_configuration v_interface_configuration;
} y_dot1q_tsn_config_uni_T_talker;

/* list /tsn-uni/domain/cuc/stream/listener/end-station-interfaces */
typedef struct y_dot1q_tsn_config_uni_T_end_station_interfaces_1_ {
    dlq_hdr_t qhdr;
    xmlChar *v_mac_address;
    xmlChar *v_interface_name;
} y_dot1q_tsn_config_uni_T_end_station_interfaces_1;

/* container /tsn-uni/domain/cuc/stream/listener/user-to-network-requirements */
typedef struct y_dot1q_tsn_config_uni_T_user_to_network_requirements_1_ {
    uint8 v_num_seamless_trees;
    uint32 v_max_latency;
} y_dot1q_tsn_config_uni_T_user_to_network_requirements_1;

/* leaf-list /tsn-uni/domain/cuc/stream/listener/interface-capabilities/cb-stream-iden-type-list */
typedef struct y_dot1q_tsn_config_uni_T_cb_stream_iden_type_list_1_ {
    dlq_hdr_t qhdr;
    uint32 v_cb_stream_iden_type_list;
} y_dot1q_tsn_config_uni_T_cb_stream_iden_type_list_1;

/* leaf-list /tsn-uni/domain/cuc/stream/listener/interface-capabilities/cb-sequence-type-list */
typedef struct y_dot1q_tsn_config_uni_T_cb_sequence_type_list_1_ {
    dlq_hdr_t qhdr;
    uint32 v_cb_sequence_type_list;
} y_dot1q_tsn_config_uni_T_cb_sequence_type_list_1;

/* container /tsn-uni/domain/cuc/stream/listener/interface-capabilities */
typedef struct y_dot1q_tsn_config_uni_T_interface_capabilities_1_ {
    boolean v_vlan_tag_capable;
    dlq_hdr_t v_cb_stream_iden_type_list;
    dlq_hdr_t v_cb_sequence_type_list;
} y_dot1q_tsn_config_uni_T_interface_capabilities_1;

/* container /tsn-uni/domain/cuc/stream/listener/interface-configuration/interface-list/config-list/config-value/ieee802-mac-addresses/ieee802-mac-addresses */
typedef struct y_dot1q_tsn_config_uni_T_ieee802_mac_addresses_5_ {
    xmlChar *v_destination_mac_address;
    xmlChar *v_source_mac_address;
} y_dot1q_tsn_config_uni_T_ieee802_mac_addresses_5;

/* case /tsn-uni/domain/cuc/stream/listener/interface-configuration/interface-list/config-list/config-value/ieee802-mac-addresses */
typedef struct y_dot1q_tsn_config_uni_T_ieee802_mac_addresses_4_ {
    y_dot1q_tsn_config_uni_T_ieee802_mac_addresses_5 v_ieee802_mac_addresses;
} y_dot1q_tsn_config_uni_T_ieee802_mac_addresses_4;

/* container /tsn-uni/domain/cuc/stream/listener/interface-configuration/interface-list/config-list/config-value/ieee802-vlan-tag/ieee802-vlan-tag */
typedef struct y_dot1q_tsn_config_uni_T_ieee802_vlan_tag_5_ {
    uint8 v_priority_code_point;
    uint16 v_vlan_id;
} y_dot1q_tsn_config_uni_T_ieee802_vlan_tag_5;

/* case /tsn-uni/domain/cuc/stream/listener/interface-configuration/interface-list/config-list/config-value/ieee802-vlan-tag */
typedef struct y_dot1q_tsn_config_uni_T_ieee802_vlan_tag_4_ {
    y_dot1q_tsn_config_uni_T_ieee802_vlan_tag_5 v_ieee802_vlan_tag;
} y_dot1q_tsn_config_uni_T_ieee802_vlan_tag_4;

/* container /tsn-uni/domain/cuc/stream/listener/interface-configuration/interface-list/config-list/config-value/ipv4-tuple/ipv4-tuple */
typedef struct y_dot1q_tsn_config_uni_T_ipv4_tuple_5_ {
    xmlChar *v_source_ip_address;
    xmlChar *v_destination_ip_address;
    uint8 v_dscp;
    uint16 v_protocol;
    uint16 v_source_port;
    uint16 v_destination_port;
} y_dot1q_tsn_config_uni_T_ipv4_tuple_5;

/* case /tsn-uni/domain/cuc/stream/listener/interface-configuration/interface-list/config-list/config-value/ipv4-tuple */
typedef struct y_dot1q_tsn_config_uni_T_ipv4_tuple_4_ {
    y_dot1q_tsn_config_uni_T_ipv4_tuple_5 v_ipv4_tuple;
} y_dot1q_tsn_config_uni_T_ipv4_tuple_4;

/* container /tsn-uni/domain/cuc/stream/listener/interface-configuration/interface-list/config-list/config-value/ipv6-tuple/ipv6-tuple */
typedef struct y_dot1q_tsn_config_uni_T_ipv6_tuple_5_ {
    xmlChar *v_source_ip_address;
    xmlChar *v_destination_ip_address;
    uint8 v_dscp;
    uint16 v_protocol;
    uint16 v_source_port;
    uint16 v_destination_port;
} y_dot1q_tsn_config_uni_T_ipv6_tuple_5;

/* case /tsn-uni/domain/cuc/stream/listener/interface-configuration/interface-list/config-list/config-value/ipv6-tuple */
typedef struct y_dot1q_tsn_config_uni_T_ipv6_tuple_4_ {
    y_dot1q_tsn_config_uni_T_ipv6_tuple_5 v_ipv6_tuple;
} y_dot1q_tsn_config_uni_T_ipv6_tuple_4;

/* case /tsn-uni/domain/cuc/stream/listener/interface-configuration/interface-list/config-list/config-value/time-aware-offset */
typedef struct y_dot1q_tsn_config_uni_T_time_aware_offset_2_ {
    uint32 v_time_aware_offset;
} y_dot1q_tsn_config_uni_T_time_aware_offset_2;

/* choice /tsn-uni/domain/cuc/stream/listener/interface-configuration/interface-list/config-list/config-value */
typedef union y_dot1q_tsn_config_uni_T_config_value_1_ {
    y_dot1q_tsn_config_uni_T_ieee802_mac_addresses_4 v_ieee802_mac_addresses;
    y_dot1q_tsn_config_uni_T_ieee802_vlan_tag_4 v_ieee802_vlan_tag;
    y_dot1q_tsn_config_uni_T_ipv4_tuple_4 v_ipv4_tuple;
    y_dot1q_tsn_config_uni_T_ipv6_tuple_4 v_ipv6_tuple;
    y_dot1q_tsn_config_uni_T_time_aware_offset_2 v_time_aware_offset;
} y_dot1q_tsn_config_uni_T_config_value_1;

/* list /tsn-uni/domain/cuc/stream/listener/interface-configuration/interface-list/config-list */
typedef struct y_dot1q_tsn_config_uni_T_config_list_1_ {
    dlq_hdr_t qhdr;
    uint8 v_index;
    y_dot1q_tsn_config_uni_T_config_value_1 v_config_value;
} y_dot1q_tsn_config_uni_T_config_list_1;

/* list /tsn-uni/domain/cuc/stream/listener/interface-configuration/interface-list */
typedef struct y_dot1q_tsn_config_uni_T_interface_list_1_ {
    dlq_hdr_t qhdr;
    xmlChar *v_mac_address;
    xmlChar *v_interface_name;
    dlq_hdr_t v_config_list;
} y_dot1q_tsn_config_uni_T_interface_list_1;

/* container /tsn-uni/domain/cuc/stream/listener/interface-configuration */
typedef struct y_dot1q_tsn_config_uni_T_interface_configuration_1_ {
    dlq_hdr_t v_interface_list;
} y_dot1q_tsn_config_uni_T_interface_configuration_1;

/* list /tsn-uni/domain/cuc/stream/listener */
typedef struct y_dot1q_tsn_config_uni_T_listener_ {
    dlq_hdr_t qhdr;
    uint32 v_index;
    dlq_hdr_t v_end_station_interfaces;
    y_dot1q_tsn_config_uni_T_user_to_network_requirements_1 v_user_to_network_requirements;
    y_dot1q_tsn_config_uni_T_interface_capabilities_1 v_interface_capabilities;
    uint32 v_accumulated_latency;
    y_dot1q_tsn_config_uni_T_interface_configuration_1 v_interface_configuration;
} y_dot1q_tsn_config_uni_T_listener;

/* container /tsn-uni/domain/cuc/stream/status-info */
typedef struct y_dot1q_tsn_config_uni_T_status_info_ {
    xmlChar *v_talker_status;
    xmlChar *v_listener_status;
    uint8 v_failure_code;
} y_dot1q_tsn_config_uni_T_status_info;

/* list /tsn-uni/domain/cuc/stream/failed-interfaces */
typedef struct y_dot1q_tsn_config_uni_T_failed_interfaces_ {
    dlq_hdr_t qhdr;
    xmlChar *v_mac_address;
    xmlChar *v_interface_name;
} y_dot1q_tsn_config_uni_T_failed_interfaces;

/* list /tsn-uni/domain/cuc/stream */
typedef struct y_dot1q_tsn_config_uni_T_stream_ {
    dlq_hdr_t qhdr;
    xmlChar *v_stream_id;
    xmlChar *v_stream_status;
    y_dot1q_tsn_config_uni_T_talker v_talker;
    dlq_hdr_t v_listener;
    y_dot1q_tsn_config_uni_T_status_info v_status_info;
    dlq_hdr_t v_failed_interfaces;
} y_dot1q_tsn_config_uni_T_stream;

/* list /tsn-uni/domain/cuc/remove_streams/input/stream-list */
typedef struct y_dot1q_tsn_config_uni_T_stream_list_ {
    dlq_hdr_t qhdr;
    xmlChar *v_stream_id;
} y_dot1q_tsn_config_uni_T_stream_list;

/* container /tsn-uni/domain/cuc/remove_streams/input */
typedef struct y_dot1q_tsn_config_uni_T_input_ {
    dlq_hdr_t v_stream_list;
} y_dot1q_tsn_config_uni_T_input;

/* container /tsn-uni/domain/cuc/remove_streams/output */
typedef struct y_dot1q_tsn_config_uni_T_output_ {
    xmlChar *v_result;
} y_dot1q_tsn_config_uni_T_output;

/* action /tsn-uni/domain/cuc/remove_streams */
typedef struct y_dot1q_tsn_config_uni_T_remove_streams_ {
    y_dot1q_tsn_config_uni_T_input v_input;
    y_dot1q_tsn_config_uni_T_output v_output;
} y_dot1q_tsn_config_uni_T_remove_streams;

/* list /tsn-uni/domain/cuc */
typedef struct y_dot1q_tsn_config_uni_T_cuc_ {
    dlq_hdr_t qhdr;
    xmlChar *v_cuc_id;
    dlq_hdr_t v_stream;
    y_dot1q_tsn_config_uni_T_remove_streams v_remove_streams;
} y_dot1q_tsn_config_uni_T_cuc;

/* list /tsn-uni/domain */
typedef struct y_dot1q_tsn_config_uni_T_domain_ {
    dlq_hdr_t qhdr;
    xmlChar *v_domain_id;
    boolean v_cnc_enabled;
    dlq_hdr_t v_cuc;
} y_dot1q_tsn_config_uni_T_domain;

/* container /tsn-uni */
typedef struct y_dot1q_tsn_config_uni_T_tsn_uni_ {
    dlq_hdr_t v_domain;
} y_dot1q_tsn_config_uni_T_tsn_uni;

/* list /compute_streams/input/domain/cuc/stream-list */
typedef struct y_dot1q_tsn_config_uni_T_stream_list_1_ {
    dlq_hdr_t qhdr;
    xmlChar *v_stream_id;
} y_dot1q_tsn_config_uni_T_stream_list_1;

/* list /compute_streams/input/domain/cuc */
typedef struct y_dot1q_tsn_config_uni_T_cuc_1_ {
    dlq_hdr_t qhdr;
    xmlChar *v_cuc_id;
    dlq_hdr_t v_stream_list;
} y_dot1q_tsn_config_uni_T_cuc_1;

/* list /compute_streams/input/domain */
typedef struct y_dot1q_tsn_config_uni_T_domain_1_ {
    dlq_hdr_t qhdr;
    xmlChar *v_domain_id;
    dlq_hdr_t v_cuc;
} y_dot1q_tsn_config_uni_T_domain_1;

/* container /compute_streams/input */
typedef struct y_dot1q_tsn_config_uni_T_input_1_ {
    dlq_hdr_t v_domain;
} y_dot1q_tsn_config_uni_T_input_1;

/* container /compute_streams/output */
typedef struct y_dot1q_tsn_config_uni_T_output_1_ {
    xmlChar *v_result;
} y_dot1q_tsn_config_uni_T_output_1;

/* rpc /compute_streams */
typedef struct y_dot1q_tsn_config_uni_T_compute_streams_ {
    y_dot1q_tsn_config_uni_T_input_1 v_input;
    y_dot1q_tsn_config_uni_T_output_1 v_output;
} y_dot1q_tsn_config_uni_T_compute_streams;

/* list /compute_planned_and_modified_streams/input/domain/cuc */
typedef struct y_dot1q_tsn_config_uni_T_cuc_2_ {
    dlq_hdr_t qhdr;
    xmlChar *v_cuc_id;
} y_dot1q_tsn_config_uni_T_cuc_2;

/* list /compute_planned_and_modified_streams/input/domain */
typedef struct y_dot1q_tsn_config_uni_T_domain_2_ {
    dlq_hdr_t qhdr;
    xmlChar *v_domain_id;
    dlq_hdr_t v_cuc;
} y_dot1q_tsn_config_uni_T_domain_2;

/* container /compute_planned_and_modified_streams/input */
typedef struct y_dot1q_tsn_config_uni_T_input_2_ {
    dlq_hdr_t v_domain;
} y_dot1q_tsn_config_uni_T_input_2;

/* container /compute_planned_and_modified_streams/output */
typedef struct y_dot1q_tsn_config_uni_T_output_2_ {
    xmlChar *v_result;
} y_dot1q_tsn_config_uni_T_output_2;

/* rpc /compute_planned_and_modified_streams */
typedef struct y_dot1q_tsn_config_uni_T_compute_planned_and_modified_streams_ {
    y_dot1q_tsn_config_uni_T_input_2 v_input;
    y_dot1q_tsn_config_uni_T_output_2 v_output;
} y_dot1q_tsn_config_uni_T_compute_planned_and_modified_streams;

/* list /compute_all_streams/input/domain/cuc */
typedef struct y_dot1q_tsn_config_uni_T_cuc_3_ {
    dlq_hdr_t qhdr;
    xmlChar *v_cuc_id;
} y_dot1q_tsn_config_uni_T_cuc_3;

/* list /compute_all_streams/input/domain */
typedef struct y_dot1q_tsn_config_uni_T_domain_3_ {
    dlq_hdr_t qhdr;
    xmlChar *v_domain_id;
    dlq_hdr_t v_cuc;
} y_dot1q_tsn_config_uni_T_domain_3;

/* container /compute_all_streams/input */
typedef struct y_dot1q_tsn_config_uni_T_input_3_ {
    dlq_hdr_t v_domain;
} y_dot1q_tsn_config_uni_T_input_3;

/* container /compute_all_streams/output */
typedef struct y_dot1q_tsn_config_uni_T_output_3_ {
    xmlChar *v_result;
} y_dot1q_tsn_config_uni_T_output_3;

/* rpc /compute_all_streams */
typedef struct y_dot1q_tsn_config_uni_T_compute_all_streams_ {
    y_dot1q_tsn_config_uni_T_input_3 v_input;
    y_dot1q_tsn_config_uni_T_output_3 v_output;
} y_dot1q_tsn_config_uni_T_compute_all_streams;

/* container /request_domain_id/input */
typedef struct y_dot1q_tsn_config_uni_T_input_4_ {
    xmlChar *v_cuc_id;
} y_dot1q_tsn_config_uni_T_input_4;

/* container /request_domain_id/output */
typedef struct y_dot1q_tsn_config_uni_T_output_4_ {
} y_dot1q_tsn_config_uni_T_output_4;

/* rpc /request_domain_id */
typedef struct y_dot1q_tsn_config_uni_T_request_domain_id_ {
    y_dot1q_tsn_config_uni_T_input_4 v_input;
    y_dot1q_tsn_config_uni_T_output_4 v_output;
} y_dot1q_tsn_config_uni_T_request_domain_id;

/* container /request_next_free_stream_id/input */
typedef struct y_dot1q_tsn_config_uni_T_input_5_ {
    xmlChar *v_domain_id;
    xmlChar *v_cuc_id;
} y_dot1q_tsn_config_uni_T_input_5;

/* container /request_next_free_stream_id/output */
typedef struct y_dot1q_tsn_config_uni_T_output_5_ {
    xmlChar *v_result;
} y_dot1q_tsn_config_uni_T_output_5;

/* rpc /request_next_free_stream_id */
typedef struct y_dot1q_tsn_config_uni_T_request_next_free_stream_id_ {
    y_dot1q_tsn_config_uni_T_input_5 v_input;
    y_dot1q_tsn_config_uni_T_output_5 v_output;
} y_dot1q_tsn_config_uni_T_request_next_free_stream_id;

/* list /configure_streams_completed/domain/cuc/stream */
typedef struct y_dot1q_tsn_config_uni_T_stream_1_ {
    dlq_hdr_t qhdr;
    xmlChar *v_stream_id;
    uint8 v_failure_code;
} y_dot1q_tsn_config_uni_T_stream_1;

/* list /configure_streams_completed/domain/cuc */
typedef struct y_dot1q_tsn_config_uni_T_cuc_4_ {
    dlq_hdr_t qhdr;
    xmlChar *v_cuc_id;
    dlq_hdr_t v_stream;
} y_dot1q_tsn_config_uni_T_cuc_4;

/* list /configure_streams_completed/domain */
typedef struct y_dot1q_tsn_config_uni_T_domain_4_ {
    dlq_hdr_t qhdr;
    xmlChar *v_domain_id;
    dlq_hdr_t v_cuc;
} y_dot1q_tsn_config_uni_T_domain_4;

/* notification /configure_streams_completed */
typedef struct y_dot1q_tsn_config_uni_T_configure_streams_completed_ {
    dlq_hdr_t v_domain;
} y_dot1q_tsn_config_uni_T_configure_streams_completed;


/**
 * @brief Edit database object callback (agt_cb_fn_t)\n
 * Path: container /tsn-uni/domain/cuc/stream/talker/stream-rank
 *
 * @param scb session control block making the request
 * @param msg message in progress for this edit request
 * @param cbtyp callback type for this callback
 * @param editop the parent edit-config operation type,
 * which is also used for all other callbacks
 * that operate on objects.
 * @param newval container object holding the proposed changes
 * to apply to the current config, depending on
 * the editop value. Will not be NULL.
 * @param curval current container values from the "<running>"
 * or "<candidate>" configuration, if any. Could be NULL
 * for create and other operations.
 * @param k_dot1q_tsn_config_uni_domain_id Ancestor key leaf 'domain-id' in list 'domain'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:domain-id
 * @param k_dot1q_tsn_config_uni_cuc_id Ancestor key leaf 'cuc-id' in list 'cuc'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:cuc-id
 * @param k_dot1q_tsn_config_uni_stream_id Ancestor key leaf 'stream-id' in list 'stream'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:stream-id
 * @return return status for the phase.
 */
extern status_t u_dot1q_tsn_config_uni_stream_rank_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_dot1q_tsn_config_uni_domain_id,
    const xmlChar *k_dot1q_tsn_config_uni_cuc_id,
    const xmlChar *k_dot1q_tsn_config_uni_stream_id);


/**
 * @brief Edit database object callback (agt_cb_fn_t)\n
 * Path: list /tsn-uni/domain/cuc/stream/talker/end-station-interfaces
 *
 * @param scb session control block making the request
 * @param msg message in progress for this edit request
 * @param cbtyp callback type for this callback
 * @param editop the parent edit-config operation type,
 * which is also used for all other callbacks
 * that operate on objects.
 * @param newval container object holding the proposed changes
 * to apply to the current config, depending on
 * the editop value. Will not be NULL.
 * @param curval current container values from the "<running>"
 * or "<candidate>" configuration, if any. Could be NULL
 * for create and other operations.
 * @param k_dot1q_tsn_config_uni_domain_id Ancestor key leaf 'domain-id' in list 'domain'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:domain-id
 * @param k_dot1q_tsn_config_uni_cuc_id Ancestor key leaf 'cuc-id' in list 'cuc'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:cuc-id
 * @param k_dot1q_tsn_config_uni_stream_id Ancestor key leaf 'stream-id' in list 'stream'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:stream-id
 * @param k_dot1q_tsn_config_uni_mac_address Local key leaf 'mac-address' in list 'end-station-interfaces'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:talker/dot1q-tsn-config-uni:end-station-interfaces/dot1q-tsn-config-uni:mac-address
 * @param k_dot1q_tsn_config_uni_interface_name Local key leaf 'interface-name' in list 'end-station-interfaces'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:talker/dot1q-tsn-config-uni:end-station-interfaces/dot1q-tsn-config-uni:interface-name
 * @return return status for the phase.
 */
extern status_t u_dot1q_tsn_config_uni_end_station_interfaces_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_dot1q_tsn_config_uni_domain_id,
    const xmlChar *k_dot1q_tsn_config_uni_cuc_id,
    const xmlChar *k_dot1q_tsn_config_uni_stream_id,
    const xmlChar *k_dot1q_tsn_config_uni_mac_address,
    const xmlChar *k_dot1q_tsn_config_uni_interface_name);


/**
 * @brief Edit database object callback (agt_cb_fn_t)\n
 * Path: container /tsn-uni/domain/cuc/stream/talker/data-frame-specification/field/ieee802-mac-addresses/ieee802-mac-addresses
 *
 * @param scb session control block making the request
 * @param msg message in progress for this edit request
 * @param cbtyp callback type for this callback
 * @param editop the parent edit-config operation type,
 * which is also used for all other callbacks
 * that operate on objects.
 * @param newval container object holding the proposed changes
 * to apply to the current config, depending on
 * the editop value. Will not be NULL.
 * @param curval current container values from the "<running>"
 * or "<candidate>" configuration, if any. Could be NULL
 * for create and other operations.
 * @param k_dot1q_tsn_config_uni_domain_id Ancestor key leaf 'domain-id' in list 'domain'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:domain-id
 * @param k_dot1q_tsn_config_uni_cuc_id Ancestor key leaf 'cuc-id' in list 'cuc'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:cuc-id
 * @param k_dot1q_tsn_config_uni_stream_id Ancestor key leaf 'stream-id' in list 'stream'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:stream-id
 * @param k_dot1q_tsn_config_uni_index Ancestor key leaf 'index' in list 'data-frame-specification'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:talker/dot1q-tsn-config-uni:data-frame-specification/dot1q-tsn-config-uni:index
 * @return return status for the phase.
 */
extern status_t u_dot1q_tsn_config_uni_ieee802_mac_addresses_1_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_dot1q_tsn_config_uni_domain_id,
    const xmlChar *k_dot1q_tsn_config_uni_cuc_id,
    const xmlChar *k_dot1q_tsn_config_uni_stream_id,
    uint8 k_dot1q_tsn_config_uni_index);


/**
 * @brief Edit database object callback (agt_cb_fn_t)\n
 * Path: container /tsn-uni/domain/cuc/stream/talker/data-frame-specification/field/ieee802-vlan-tag/ieee802-vlan-tag
 *
 * @param scb session control block making the request
 * @param msg message in progress for this edit request
 * @param cbtyp callback type for this callback
 * @param editop the parent edit-config operation type,
 * which is also used for all other callbacks
 * that operate on objects.
 * @param newval container object holding the proposed changes
 * to apply to the current config, depending on
 * the editop value. Will not be NULL.
 * @param curval current container values from the "<running>"
 * or "<candidate>" configuration, if any. Could be NULL
 * for create and other operations.
 * @param k_dot1q_tsn_config_uni_domain_id Ancestor key leaf 'domain-id' in list 'domain'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:domain-id
 * @param k_dot1q_tsn_config_uni_cuc_id Ancestor key leaf 'cuc-id' in list 'cuc'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:cuc-id
 * @param k_dot1q_tsn_config_uni_stream_id Ancestor key leaf 'stream-id' in list 'stream'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:stream-id
 * @param k_dot1q_tsn_config_uni_index Ancestor key leaf 'index' in list 'data-frame-specification'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:talker/dot1q-tsn-config-uni:data-frame-specification/dot1q-tsn-config-uni:index
 * @return return status for the phase.
 */
extern status_t u_dot1q_tsn_config_uni_ieee802_vlan_tag_1_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_dot1q_tsn_config_uni_domain_id,
    const xmlChar *k_dot1q_tsn_config_uni_cuc_id,
    const xmlChar *k_dot1q_tsn_config_uni_stream_id,
    uint8 k_dot1q_tsn_config_uni_index);


/**
 * @brief Edit database object callback (agt_cb_fn_t)\n
 * Path: container /tsn-uni/domain/cuc/stream/talker/data-frame-specification/field/ipv4-tuple/ipv4-tuple
 *
 * @param scb session control block making the request
 * @param msg message in progress for this edit request
 * @param cbtyp callback type for this callback
 * @param editop the parent edit-config operation type,
 * which is also used for all other callbacks
 * that operate on objects.
 * @param newval container object holding the proposed changes
 * to apply to the current config, depending on
 * the editop value. Will not be NULL.
 * @param curval current container values from the "<running>"
 * or "<candidate>" configuration, if any. Could be NULL
 * for create and other operations.
 * @param k_dot1q_tsn_config_uni_domain_id Ancestor key leaf 'domain-id' in list 'domain'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:domain-id
 * @param k_dot1q_tsn_config_uni_cuc_id Ancestor key leaf 'cuc-id' in list 'cuc'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:cuc-id
 * @param k_dot1q_tsn_config_uni_stream_id Ancestor key leaf 'stream-id' in list 'stream'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:stream-id
 * @param k_dot1q_tsn_config_uni_index Ancestor key leaf 'index' in list 'data-frame-specification'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:talker/dot1q-tsn-config-uni:data-frame-specification/dot1q-tsn-config-uni:index
 * @return return status for the phase.
 */
extern status_t u_dot1q_tsn_config_uni_ipv4_tuple_1_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_dot1q_tsn_config_uni_domain_id,
    const xmlChar *k_dot1q_tsn_config_uni_cuc_id,
    const xmlChar *k_dot1q_tsn_config_uni_stream_id,
    uint8 k_dot1q_tsn_config_uni_index);


/**
 * @brief Edit database object callback (agt_cb_fn_t)\n
 * Path: container /tsn-uni/domain/cuc/stream/talker/data-frame-specification/field/ipv6-tuple/ipv6-tuple
 *
 * @param scb session control block making the request
 * @param msg message in progress for this edit request
 * @param cbtyp callback type for this callback
 * @param editop the parent edit-config operation type,
 * which is also used for all other callbacks
 * that operate on objects.
 * @param newval container object holding the proposed changes
 * to apply to the current config, depending on
 * the editop value. Will not be NULL.
 * @param curval current container values from the "<running>"
 * or "<candidate>" configuration, if any. Could be NULL
 * for create and other operations.
 * @param k_dot1q_tsn_config_uni_domain_id Ancestor key leaf 'domain-id' in list 'domain'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:domain-id
 * @param k_dot1q_tsn_config_uni_cuc_id Ancestor key leaf 'cuc-id' in list 'cuc'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:cuc-id
 * @param k_dot1q_tsn_config_uni_stream_id Ancestor key leaf 'stream-id' in list 'stream'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:stream-id
 * @param k_dot1q_tsn_config_uni_index Ancestor key leaf 'index' in list 'data-frame-specification'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:talker/dot1q-tsn-config-uni:data-frame-specification/dot1q-tsn-config-uni:index
 * @return return status for the phase.
 */
extern status_t u_dot1q_tsn_config_uni_ipv6_tuple_1_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_dot1q_tsn_config_uni_domain_id,
    const xmlChar *k_dot1q_tsn_config_uni_cuc_id,
    const xmlChar *k_dot1q_tsn_config_uni_stream_id,
    uint8 k_dot1q_tsn_config_uni_index);


/**
 * @brief Edit database object callback (agt_cb_fn_t)\n
 * Path: list /tsn-uni/domain/cuc/stream/talker/data-frame-specification
 *
 * @param scb session control block making the request
 * @param msg message in progress for this edit request
 * @param cbtyp callback type for this callback
 * @param editop the parent edit-config operation type,
 * which is also used for all other callbacks
 * that operate on objects.
 * @param newval container object holding the proposed changes
 * to apply to the current config, depending on
 * the editop value. Will not be NULL.
 * @param curval current container values from the "<running>"
 * or "<candidate>" configuration, if any. Could be NULL
 * for create and other operations.
 * @param k_dot1q_tsn_config_uni_domain_id Ancestor key leaf 'domain-id' in list 'domain'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:domain-id
 * @param k_dot1q_tsn_config_uni_cuc_id Ancestor key leaf 'cuc-id' in list 'cuc'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:cuc-id
 * @param k_dot1q_tsn_config_uni_stream_id Ancestor key leaf 'stream-id' in list 'stream'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:stream-id
 * @param k_dot1q_tsn_config_uni_index Local key leaf 'index' in list 'data-frame-specification'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:talker/dot1q-tsn-config-uni:data-frame-specification/dot1q-tsn-config-uni:index
 * @return return status for the phase.
 */
extern status_t u_dot1q_tsn_config_uni_data_frame_specification_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_dot1q_tsn_config_uni_domain_id,
    const xmlChar *k_dot1q_tsn_config_uni_cuc_id,
    const xmlChar *k_dot1q_tsn_config_uni_stream_id,
    uint8 k_dot1q_tsn_config_uni_index);


/**
 * @brief Edit database object callback (agt_cb_fn_t)\n
 * Path: container /tsn-uni/domain/cuc/stream/talker/traffic-specification/interval
 *
 * @param scb session control block making the request
 * @param msg message in progress for this edit request
 * @param cbtyp callback type for this callback
 * @param editop the parent edit-config operation type,
 * which is also used for all other callbacks
 * that operate on objects.
 * @param newval container object holding the proposed changes
 * to apply to the current config, depending on
 * the editop value. Will not be NULL.
 * @param curval current container values from the "<running>"
 * or "<candidate>" configuration, if any. Could be NULL
 * for create and other operations.
 * @param k_dot1q_tsn_config_uni_domain_id Ancestor key leaf 'domain-id' in list 'domain'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:domain-id
 * @param k_dot1q_tsn_config_uni_cuc_id Ancestor key leaf 'cuc-id' in list 'cuc'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:cuc-id
 * @param k_dot1q_tsn_config_uni_stream_id Ancestor key leaf 'stream-id' in list 'stream'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:stream-id
 * @return return status for the phase.
 */
extern status_t u_dot1q_tsn_config_uni_interval_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_dot1q_tsn_config_uni_domain_id,
    const xmlChar *k_dot1q_tsn_config_uni_cuc_id,
    const xmlChar *k_dot1q_tsn_config_uni_stream_id);


/**
 * @brief Edit database object callback (agt_cb_fn_t)\n
 * Path: container /tsn-uni/domain/cuc/stream/talker/traffic-specification/time-aware
 *
 * @param scb session control block making the request
 * @param msg message in progress for this edit request
 * @param cbtyp callback type for this callback
 * @param editop the parent edit-config operation type,
 * which is also used for all other callbacks
 * that operate on objects.
 * @param newval container object holding the proposed changes
 * to apply to the current config, depending on
 * the editop value. Will not be NULL.
 * @param curval current container values from the "<running>"
 * or "<candidate>" configuration, if any. Could be NULL
 * for create and other operations.
 * @param k_dot1q_tsn_config_uni_domain_id Ancestor key leaf 'domain-id' in list 'domain'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:domain-id
 * @param k_dot1q_tsn_config_uni_cuc_id Ancestor key leaf 'cuc-id' in list 'cuc'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:cuc-id
 * @param k_dot1q_tsn_config_uni_stream_id Ancestor key leaf 'stream-id' in list 'stream'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:stream-id
 * @return return status for the phase.
 */
extern status_t u_dot1q_tsn_config_uni_time_aware_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_dot1q_tsn_config_uni_domain_id,
    const xmlChar *k_dot1q_tsn_config_uni_cuc_id,
    const xmlChar *k_dot1q_tsn_config_uni_stream_id);


/**
 * @brief Edit database object callback (agt_cb_fn_t)\n
 * Path: container /tsn-uni/domain/cuc/stream/talker/traffic-specification
 *
 * @param scb session control block making the request
 * @param msg message in progress for this edit request
 * @param cbtyp callback type for this callback
 * @param editop the parent edit-config operation type,
 * which is also used for all other callbacks
 * that operate on objects.
 * @param newval container object holding the proposed changes
 * to apply to the current config, depending on
 * the editop value. Will not be NULL.
 * @param curval current container values from the "<running>"
 * or "<candidate>" configuration, if any. Could be NULL
 * for create and other operations.
 * @param k_dot1q_tsn_config_uni_domain_id Ancestor key leaf 'domain-id' in list 'domain'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:domain-id
 * @param k_dot1q_tsn_config_uni_cuc_id Ancestor key leaf 'cuc-id' in list 'cuc'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:cuc-id
 * @param k_dot1q_tsn_config_uni_stream_id Ancestor key leaf 'stream-id' in list 'stream'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:stream-id
 * @return return status for the phase.
 */
extern status_t u_dot1q_tsn_config_uni_traffic_specification_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_dot1q_tsn_config_uni_domain_id,
    const xmlChar *k_dot1q_tsn_config_uni_cuc_id,
    const xmlChar *k_dot1q_tsn_config_uni_stream_id);


/**
 * @brief Edit database object callback (agt_cb_fn_t)\n
 * Path: container /tsn-uni/domain/cuc/stream/talker/user-to-network-requirements
 *
 * @param scb session control block making the request
 * @param msg message in progress for this edit request
 * @param cbtyp callback type for this callback
 * @param editop the parent edit-config operation type,
 * which is also used for all other callbacks
 * that operate on objects.
 * @param newval container object holding the proposed changes
 * to apply to the current config, depending on
 * the editop value. Will not be NULL.
 * @param curval current container values from the "<running>"
 * or "<candidate>" configuration, if any. Could be NULL
 * for create and other operations.
 * @param k_dot1q_tsn_config_uni_domain_id Ancestor key leaf 'domain-id' in list 'domain'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:domain-id
 * @param k_dot1q_tsn_config_uni_cuc_id Ancestor key leaf 'cuc-id' in list 'cuc'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:cuc-id
 * @param k_dot1q_tsn_config_uni_stream_id Ancestor key leaf 'stream-id' in list 'stream'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:stream-id
 * @return return status for the phase.
 */
extern status_t u_dot1q_tsn_config_uni_user_to_network_requirements_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_dot1q_tsn_config_uni_domain_id,
    const xmlChar *k_dot1q_tsn_config_uni_cuc_id,
    const xmlChar *k_dot1q_tsn_config_uni_stream_id);


/**
 * @brief Edit database object callback (agt_cb_fn_t)\n
 * Path: container /tsn-uni/domain/cuc/stream/talker/interface-capabilities
 *
 * @param scb session control block making the request
 * @param msg message in progress for this edit request
 * @param cbtyp callback type for this callback
 * @param editop the parent edit-config operation type,
 * which is also used for all other callbacks
 * that operate on objects.
 * @param newval container object holding the proposed changes
 * to apply to the current config, depending on
 * the editop value. Will not be NULL.
 * @param curval current container values from the "<running>"
 * or "<candidate>" configuration, if any. Could be NULL
 * for create and other operations.
 * @param k_dot1q_tsn_config_uni_domain_id Ancestor key leaf 'domain-id' in list 'domain'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:domain-id
 * @param k_dot1q_tsn_config_uni_cuc_id Ancestor key leaf 'cuc-id' in list 'cuc'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:cuc-id
 * @param k_dot1q_tsn_config_uni_stream_id Ancestor key leaf 'stream-id' in list 'stream'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:stream-id
 * @return return status for the phase.
 */
extern status_t u_dot1q_tsn_config_uni_interface_capabilities_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_dot1q_tsn_config_uni_domain_id,
    const xmlChar *k_dot1q_tsn_config_uni_cuc_id,
    const xmlChar *k_dot1q_tsn_config_uni_stream_id);


/**
 * @brief Get database object callback for leaf accumulated-latency (getcb_fn2_t)\n
 * Path: leaf /tsn-uni/domain/cuc/stream/talker/accumulated-latency\n
 *
 * Fill in 'get2cb' response fields.
 *
 * @param get2cb GET2 control block for the callback.
 * @param k_dot1q_tsn_config_uni_domain_id Ancestor key leaf 'domain-id' in list 'domain'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:domain-id
 * @param k_dot1q_tsn_config_uni_cuc_id Ancestor key leaf 'cuc-id' in list 'cuc'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:cuc-id
 * @param k_dot1q_tsn_config_uni_stream_id Ancestor key leaf 'stream-id' in list 'stream'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:stream-id
 * @return return status of the callback.
 */
extern status_t u_dot1q_tsn_config_uni_accumulated_latency_get (
    getcb_get2_t *get2cb,
    const xmlChar *k_dot1q_tsn_config_uni_domain_id,
    const xmlChar *k_dot1q_tsn_config_uni_cuc_id,
    const xmlChar *k_dot1q_tsn_config_uni_stream_id);


/**
 * @brief Get database object callback for container ieee802-mac-addresses (getcb_fn2_t)\n
 * Path: container /tsn-uni/domain/cuc/stream/talker/interface-configuration/interface-list/config-list/config-value/ieee802-mac-addresses/ieee802-mac-addresses\n
 *
 * Fill in 'get2cb' response fields.
 *
 * @param get2cb GET2 control block for the callback.
 * @param k_dot1q_tsn_config_uni_domain_id Ancestor key leaf 'domain-id' in list 'domain'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:domain-id
 * @param k_dot1q_tsn_config_uni_cuc_id Ancestor key leaf 'cuc-id' in list 'cuc'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:cuc-id
 * @param k_dot1q_tsn_config_uni_stream_id Ancestor key leaf 'stream-id' in list 'stream'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:stream-id
 * @param k_dot1q_tsn_config_uni_mac_address_1 Ancestor key leaf 'mac-address' in list 'interface-list'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:talker/dot1q-tsn-config-uni:interface-configuration/dot1q-tsn-config-uni:interface-list/dot1q-tsn-config-uni:mac-address
 * @param k_dot1q_tsn_config_uni_interface_name_1 Ancestor key leaf 'interface-name' in list 'interface-list'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:talker/dot1q-tsn-config-uni:interface-configuration/dot1q-tsn-config-uni:interface-list/dot1q-tsn-config-uni:interface-name
 * @param k_dot1q_tsn_config_uni_index_1 Ancestor key leaf 'index' in list 'config-list'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:talker/dot1q-tsn-config-uni:interface-configuration/dot1q-tsn-config-uni:interface-list/dot1q-tsn-config-uni:config-list/dot1q-tsn-config-uni:index
 * @return return status of the callback.
 */
extern status_t u_dot1q_tsn_config_uni_ieee802_mac_addresses_3_get (
    getcb_get2_t *get2cb,
    const xmlChar *k_dot1q_tsn_config_uni_domain_id,
    const xmlChar *k_dot1q_tsn_config_uni_cuc_id,
    const xmlChar *k_dot1q_tsn_config_uni_stream_id,
    const xmlChar *k_dot1q_tsn_config_uni_mac_address_1,
    const xmlChar *k_dot1q_tsn_config_uni_interface_name_1,
    uint8 k_dot1q_tsn_config_uni_index_1);


/**
 * @brief Get database object callback for container ieee802-vlan-tag (getcb_fn2_t)\n
 * Path: container /tsn-uni/domain/cuc/stream/talker/interface-configuration/interface-list/config-list/config-value/ieee802-vlan-tag/ieee802-vlan-tag\n
 *
 * Fill in 'get2cb' response fields.
 *
 * @param get2cb GET2 control block for the callback.
 * @param k_dot1q_tsn_config_uni_domain_id Ancestor key leaf 'domain-id' in list 'domain'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:domain-id
 * @param k_dot1q_tsn_config_uni_cuc_id Ancestor key leaf 'cuc-id' in list 'cuc'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:cuc-id
 * @param k_dot1q_tsn_config_uni_stream_id Ancestor key leaf 'stream-id' in list 'stream'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:stream-id
 * @param k_dot1q_tsn_config_uni_mac_address_1 Ancestor key leaf 'mac-address' in list 'interface-list'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:talker/dot1q-tsn-config-uni:interface-configuration/dot1q-tsn-config-uni:interface-list/dot1q-tsn-config-uni:mac-address
 * @param k_dot1q_tsn_config_uni_interface_name_1 Ancestor key leaf 'interface-name' in list 'interface-list'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:talker/dot1q-tsn-config-uni:interface-configuration/dot1q-tsn-config-uni:interface-list/dot1q-tsn-config-uni:interface-name
 * @param k_dot1q_tsn_config_uni_index_1 Ancestor key leaf 'index' in list 'config-list'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:talker/dot1q-tsn-config-uni:interface-configuration/dot1q-tsn-config-uni:interface-list/dot1q-tsn-config-uni:config-list/dot1q-tsn-config-uni:index
 * @return return status of the callback.
 */
extern status_t u_dot1q_tsn_config_uni_ieee802_vlan_tag_3_get (
    getcb_get2_t *get2cb,
    const xmlChar *k_dot1q_tsn_config_uni_domain_id,
    const xmlChar *k_dot1q_tsn_config_uni_cuc_id,
    const xmlChar *k_dot1q_tsn_config_uni_stream_id,
    const xmlChar *k_dot1q_tsn_config_uni_mac_address_1,
    const xmlChar *k_dot1q_tsn_config_uni_interface_name_1,
    uint8 k_dot1q_tsn_config_uni_index_1);


/**
 * @brief Get database object callback for container ipv4-tuple (getcb_fn2_t)\n
 * Path: container /tsn-uni/domain/cuc/stream/talker/interface-configuration/interface-list/config-list/config-value/ipv4-tuple/ipv4-tuple\n
 *
 * Fill in 'get2cb' response fields.
 *
 * @param get2cb GET2 control block for the callback.
 * @param k_dot1q_tsn_config_uni_domain_id Ancestor key leaf 'domain-id' in list 'domain'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:domain-id
 * @param k_dot1q_tsn_config_uni_cuc_id Ancestor key leaf 'cuc-id' in list 'cuc'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:cuc-id
 * @param k_dot1q_tsn_config_uni_stream_id Ancestor key leaf 'stream-id' in list 'stream'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:stream-id
 * @param k_dot1q_tsn_config_uni_mac_address_1 Ancestor key leaf 'mac-address' in list 'interface-list'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:talker/dot1q-tsn-config-uni:interface-configuration/dot1q-tsn-config-uni:interface-list/dot1q-tsn-config-uni:mac-address
 * @param k_dot1q_tsn_config_uni_interface_name_1 Ancestor key leaf 'interface-name' in list 'interface-list'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:talker/dot1q-tsn-config-uni:interface-configuration/dot1q-tsn-config-uni:interface-list/dot1q-tsn-config-uni:interface-name
 * @param k_dot1q_tsn_config_uni_index_1 Ancestor key leaf 'index' in list 'config-list'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:talker/dot1q-tsn-config-uni:interface-configuration/dot1q-tsn-config-uni:interface-list/dot1q-tsn-config-uni:config-list/dot1q-tsn-config-uni:index
 * @return return status of the callback.
 */
extern status_t u_dot1q_tsn_config_uni_ipv4_tuple_3_get (
    getcb_get2_t *get2cb,
    const xmlChar *k_dot1q_tsn_config_uni_domain_id,
    const xmlChar *k_dot1q_tsn_config_uni_cuc_id,
    const xmlChar *k_dot1q_tsn_config_uni_stream_id,
    const xmlChar *k_dot1q_tsn_config_uni_mac_address_1,
    const xmlChar *k_dot1q_tsn_config_uni_interface_name_1,
    uint8 k_dot1q_tsn_config_uni_index_1);


/**
 * @brief Get database object callback for container ipv6-tuple (getcb_fn2_t)\n
 * Path: container /tsn-uni/domain/cuc/stream/talker/interface-configuration/interface-list/config-list/config-value/ipv6-tuple/ipv6-tuple\n
 *
 * Fill in 'get2cb' response fields.
 *
 * @param get2cb GET2 control block for the callback.
 * @param k_dot1q_tsn_config_uni_domain_id Ancestor key leaf 'domain-id' in list 'domain'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:domain-id
 * @param k_dot1q_tsn_config_uni_cuc_id Ancestor key leaf 'cuc-id' in list 'cuc'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:cuc-id
 * @param k_dot1q_tsn_config_uni_stream_id Ancestor key leaf 'stream-id' in list 'stream'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:stream-id
 * @param k_dot1q_tsn_config_uni_mac_address_1 Ancestor key leaf 'mac-address' in list 'interface-list'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:talker/dot1q-tsn-config-uni:interface-configuration/dot1q-tsn-config-uni:interface-list/dot1q-tsn-config-uni:mac-address
 * @param k_dot1q_tsn_config_uni_interface_name_1 Ancestor key leaf 'interface-name' in list 'interface-list'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:talker/dot1q-tsn-config-uni:interface-configuration/dot1q-tsn-config-uni:interface-list/dot1q-tsn-config-uni:interface-name
 * @param k_dot1q_tsn_config_uni_index_1 Ancestor key leaf 'index' in list 'config-list'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:talker/dot1q-tsn-config-uni:interface-configuration/dot1q-tsn-config-uni:interface-list/dot1q-tsn-config-uni:config-list/dot1q-tsn-config-uni:index
 * @return return status of the callback.
 */
extern status_t u_dot1q_tsn_config_uni_ipv6_tuple_3_get (
    getcb_get2_t *get2cb,
    const xmlChar *k_dot1q_tsn_config_uni_domain_id,
    const xmlChar *k_dot1q_tsn_config_uni_cuc_id,
    const xmlChar *k_dot1q_tsn_config_uni_stream_id,
    const xmlChar *k_dot1q_tsn_config_uni_mac_address_1,
    const xmlChar *k_dot1q_tsn_config_uni_interface_name_1,
    uint8 k_dot1q_tsn_config_uni_index_1);


/**
 * @brief Get database object callback for choice config-value (getcb_fn2_t)\n
 * Path: choice /tsn-uni/domain/cuc/stream/talker/interface-configuration/interface-list/config-list/config-value\n
 *
 * Fill in 'get2cb' response fields.
 *
 * @param get2cb GET2 control block for the callback.
 * @param k_dot1q_tsn_config_uni_domain_id Ancestor key leaf 'domain-id' in list 'domain'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:domain-id
 * @param k_dot1q_tsn_config_uni_cuc_id Ancestor key leaf 'cuc-id' in list 'cuc'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:cuc-id
 * @param k_dot1q_tsn_config_uni_stream_id Ancestor key leaf 'stream-id' in list 'stream'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:stream-id
 * @param k_dot1q_tsn_config_uni_mac_address_1 Ancestor key leaf 'mac-address' in list 'interface-list'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:talker/dot1q-tsn-config-uni:interface-configuration/dot1q-tsn-config-uni:interface-list/dot1q-tsn-config-uni:mac-address
 * @param k_dot1q_tsn_config_uni_interface_name_1 Ancestor key leaf 'interface-name' in list 'interface-list'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:talker/dot1q-tsn-config-uni:interface-configuration/dot1q-tsn-config-uni:interface-list/dot1q-tsn-config-uni:interface-name
 * @param k_dot1q_tsn_config_uni_index_1 Ancestor key leaf 'index' in list 'config-list'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:talker/dot1q-tsn-config-uni:interface-configuration/dot1q-tsn-config-uni:interface-list/dot1q-tsn-config-uni:config-list/dot1q-tsn-config-uni:index
 * @return return status of the callback.
 */
extern status_t u_dot1q_tsn_config_uni_config_value_get (
    getcb_get2_t *get2cb,
    const xmlChar *k_dot1q_tsn_config_uni_domain_id,
    const xmlChar *k_dot1q_tsn_config_uni_cuc_id,
    const xmlChar *k_dot1q_tsn_config_uni_stream_id,
    const xmlChar *k_dot1q_tsn_config_uni_mac_address_1,
    const xmlChar *k_dot1q_tsn_config_uni_interface_name_1,
    uint8 k_dot1q_tsn_config_uni_index_1);


/**
 * @brief Get database object callback for list config-list (getcb_fn2_t)\n
 * Path: list /tsn-uni/domain/cuc/stream/talker/interface-configuration/interface-list/config-list\n
 *
 * Fill in 'get2cb' response fields.
 *
 * @param get2cb GET2 control block for the callback.
 * @param k_dot1q_tsn_config_uni_domain_id Ancestor key leaf 'domain-id' in list 'domain'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:domain-id
 * @param k_dot1q_tsn_config_uni_cuc_id Ancestor key leaf 'cuc-id' in list 'cuc'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:cuc-id
 * @param k_dot1q_tsn_config_uni_stream_id Ancestor key leaf 'stream-id' in list 'stream'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:stream-id
 * @param k_dot1q_tsn_config_uni_mac_address_1 Ancestor key leaf 'mac-address' in list 'interface-list'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:talker/dot1q-tsn-config-uni:interface-configuration/dot1q-tsn-config-uni:interface-list/dot1q-tsn-config-uni:mac-address
 * @param k_dot1q_tsn_config_uni_interface_name_1 Ancestor key leaf 'interface-name' in list 'interface-list'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:talker/dot1q-tsn-config-uni:interface-configuration/dot1q-tsn-config-uni:interface-list/dot1q-tsn-config-uni:interface-name
 * @param k_dot1q_tsn_config_uni_index_1 Local key leaf 'index' in list 'config-list'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:talker/dot1q-tsn-config-uni:interface-configuration/dot1q-tsn-config-uni:interface-list/dot1q-tsn-config-uni:config-list/dot1q-tsn-config-uni:index
 * @param index_fixed TRUE if this key is fixed in a getnext request.
 * @param index_present TRUE if this key is present and 'k_dot1q_tsn_config_uni_index_1' is valid.\n
 * FALSE to get first in a getnext request.
 * @return return status of the callback.
 */
extern status_t u_dot1q_tsn_config_uni_config_list_get (
    getcb_get2_t *get2cb,
    const xmlChar *k_dot1q_tsn_config_uni_domain_id,
    const xmlChar *k_dot1q_tsn_config_uni_cuc_id,
    const xmlChar *k_dot1q_tsn_config_uni_stream_id,
    const xmlChar *k_dot1q_tsn_config_uni_mac_address_1,
    const xmlChar *k_dot1q_tsn_config_uni_interface_name_1,
    uint8 k_dot1q_tsn_config_uni_index_1,
    boolean index_fixed,
    boolean index_present);


/**
 * @brief Get database object callback for list interface-list (getcb_fn2_t)\n
 * Path: list /tsn-uni/domain/cuc/stream/talker/interface-configuration/interface-list\n
 *
 * Fill in 'get2cb' response fields.
 *
 * @param get2cb GET2 control block for the callback.
 * @param k_dot1q_tsn_config_uni_domain_id Ancestor key leaf 'domain-id' in list 'domain'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:domain-id
 * @param k_dot1q_tsn_config_uni_cuc_id Ancestor key leaf 'cuc-id' in list 'cuc'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:cuc-id
 * @param k_dot1q_tsn_config_uni_stream_id Ancestor key leaf 'stream-id' in list 'stream'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:stream-id
 * @param k_dot1q_tsn_config_uni_mac_address_1 Local key leaf 'mac-address' in list 'interface-list'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:talker/dot1q-tsn-config-uni:interface-configuration/dot1q-tsn-config-uni:interface-list/dot1q-tsn-config-uni:mac-address
 * @param mac_address_fixed TRUE if this key is fixed in a getnext request.
 * @param mac_address_present TRUE if this key is present and 'k_dot1q_tsn_config_uni_mac_address_1' is valid.\n
 * FALSE to get first in a getnext request.
 * @param k_dot1q_tsn_config_uni_interface_name_1 Local key leaf 'interface-name' in list 'interface-list'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:talker/dot1q-tsn-config-uni:interface-configuration/dot1q-tsn-config-uni:interface-list/dot1q-tsn-config-uni:interface-name
 * @param interface_name_fixed TRUE if this key is fixed in a getnext request.
 * @param interface_name_present TRUE if this key is present and 'k_dot1q_tsn_config_uni_interface_name_1' is valid.\n
 * FALSE to get first in a getnext request.
 * @return return status of the callback.
 */
extern status_t u_dot1q_tsn_config_uni_interface_list_get (
    getcb_get2_t *get2cb,
    const xmlChar *k_dot1q_tsn_config_uni_domain_id,
    const xmlChar *k_dot1q_tsn_config_uni_cuc_id,
    const xmlChar *k_dot1q_tsn_config_uni_stream_id,
    const xmlChar *k_dot1q_tsn_config_uni_mac_address_1,
    boolean mac_address_fixed,
    boolean mac_address_present,
    const xmlChar *k_dot1q_tsn_config_uni_interface_name_1,
    boolean interface_name_fixed,
    boolean interface_name_present);


/**
 * @brief Get database object callback for container interface-configuration (getcb_fn2_t)\n
 * Path: container /tsn-uni/domain/cuc/stream/talker/interface-configuration\n
 *
 * Fill in 'get2cb' response fields.
 *
 * @param get2cb GET2 control block for the callback.
 * @param k_dot1q_tsn_config_uni_domain_id Ancestor key leaf 'domain-id' in list 'domain'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:domain-id
 * @param k_dot1q_tsn_config_uni_cuc_id Ancestor key leaf 'cuc-id' in list 'cuc'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:cuc-id
 * @param k_dot1q_tsn_config_uni_stream_id Ancestor key leaf 'stream-id' in list 'stream'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:stream-id
 * @return return status of the callback.
 */
extern status_t u_dot1q_tsn_config_uni_interface_configuration_get (
    getcb_get2_t *get2cb,
    const xmlChar *k_dot1q_tsn_config_uni_domain_id,
    const xmlChar *k_dot1q_tsn_config_uni_cuc_id,
    const xmlChar *k_dot1q_tsn_config_uni_stream_id);


/**
 * @brief Edit database object callback (agt_cb_fn_t)\n
 * Path: container /tsn-uni/domain/cuc/stream/talker
 *
 * @param scb session control block making the request
 * @param msg message in progress for this edit request
 * @param cbtyp callback type for this callback
 * @param editop the parent edit-config operation type,
 * which is also used for all other callbacks
 * that operate on objects.
 * @param newval container object holding the proposed changes
 * to apply to the current config, depending on
 * the editop value. Will not be NULL.
 * @param curval current container values from the "<running>"
 * or "<candidate>" configuration, if any. Could be NULL
 * for create and other operations.
 * @param k_dot1q_tsn_config_uni_domain_id Ancestor key leaf 'domain-id' in list 'domain'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:domain-id
 * @param k_dot1q_tsn_config_uni_cuc_id Ancestor key leaf 'cuc-id' in list 'cuc'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:cuc-id
 * @param k_dot1q_tsn_config_uni_stream_id Ancestor key leaf 'stream-id' in list 'stream'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:stream-id
 * @return return status for the phase.
 */
extern status_t u_dot1q_tsn_config_uni_talker_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_dot1q_tsn_config_uni_domain_id,
    const xmlChar *k_dot1q_tsn_config_uni_cuc_id,
    const xmlChar *k_dot1q_tsn_config_uni_stream_id);


/**
 * @brief Edit database object callback (agt_cb_fn_t)\n
 * Path: list /tsn-uni/domain/cuc/stream/listener/end-station-interfaces
 *
 * @param scb session control block making the request
 * @param msg message in progress for this edit request
 * @param cbtyp callback type for this callback
 * @param editop the parent edit-config operation type,
 * which is also used for all other callbacks
 * that operate on objects.
 * @param newval container object holding the proposed changes
 * to apply to the current config, depending on
 * the editop value. Will not be NULL.
 * @param curval current container values from the "<running>"
 * or "<candidate>" configuration, if any. Could be NULL
 * for create and other operations.
 * @param k_dot1q_tsn_config_uni_domain_id Ancestor key leaf 'domain-id' in list 'domain'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:domain-id
 * @param k_dot1q_tsn_config_uni_cuc_id Ancestor key leaf 'cuc-id' in list 'cuc'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:cuc-id
 * @param k_dot1q_tsn_config_uni_stream_id Ancestor key leaf 'stream-id' in list 'stream'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:stream-id
 * @param k_dot1q_tsn_config_uni_index_2 Ancestor key leaf 'index' in list 'listener'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:listener/dot1q-tsn-config-uni:index
 * @param k_dot1q_tsn_config_uni_mac_address_2 Local key leaf 'mac-address' in list 'end-station-interfaces'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:listener/dot1q-tsn-config-uni:end-station-interfaces/dot1q-tsn-config-uni:mac-address
 * @param k_dot1q_tsn_config_uni_interface_name_2 Local key leaf 'interface-name' in list 'end-station-interfaces'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:listener/dot1q-tsn-config-uni:end-station-interfaces/dot1q-tsn-config-uni:interface-name
 * @return return status for the phase.
 */
extern status_t u_dot1q_tsn_config_uni_end_station_interfaces_1_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_dot1q_tsn_config_uni_domain_id,
    const xmlChar *k_dot1q_tsn_config_uni_cuc_id,
    const xmlChar *k_dot1q_tsn_config_uni_stream_id,
    uint32 k_dot1q_tsn_config_uni_index_2,
    const xmlChar *k_dot1q_tsn_config_uni_mac_address_2,
    const xmlChar *k_dot1q_tsn_config_uni_interface_name_2);


/**
 * @brief Edit database object callback (agt_cb_fn_t)\n
 * Path: container /tsn-uni/domain/cuc/stream/listener/user-to-network-requirements
 *
 * @param scb session control block making the request
 * @param msg message in progress for this edit request
 * @param cbtyp callback type for this callback
 * @param editop the parent edit-config operation type,
 * which is also used for all other callbacks
 * that operate on objects.
 * @param newval container object holding the proposed changes
 * to apply to the current config, depending on
 * the editop value. Will not be NULL.
 * @param curval current container values from the "<running>"
 * or "<candidate>" configuration, if any. Could be NULL
 * for create and other operations.
 * @param k_dot1q_tsn_config_uni_domain_id Ancestor key leaf 'domain-id' in list 'domain'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:domain-id
 * @param k_dot1q_tsn_config_uni_cuc_id Ancestor key leaf 'cuc-id' in list 'cuc'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:cuc-id
 * @param k_dot1q_tsn_config_uni_stream_id Ancestor key leaf 'stream-id' in list 'stream'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:stream-id
 * @param k_dot1q_tsn_config_uni_index_2 Ancestor key leaf 'index' in list 'listener'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:listener/dot1q-tsn-config-uni:index
 * @return return status for the phase.
 */
extern status_t u_dot1q_tsn_config_uni_user_to_network_requirements_1_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_dot1q_tsn_config_uni_domain_id,
    const xmlChar *k_dot1q_tsn_config_uni_cuc_id,
    const xmlChar *k_dot1q_tsn_config_uni_stream_id,
    uint32 k_dot1q_tsn_config_uni_index_2);


/**
 * @brief Edit database object callback (agt_cb_fn_t)\n
 * Path: container /tsn-uni/domain/cuc/stream/listener/interface-capabilities
 *
 * @param scb session control block making the request
 * @param msg message in progress for this edit request
 * @param cbtyp callback type for this callback
 * @param editop the parent edit-config operation type,
 * which is also used for all other callbacks
 * that operate on objects.
 * @param newval container object holding the proposed changes
 * to apply to the current config, depending on
 * the editop value. Will not be NULL.
 * @param curval current container values from the "<running>"
 * or "<candidate>" configuration, if any. Could be NULL
 * for create and other operations.
 * @param k_dot1q_tsn_config_uni_domain_id Ancestor key leaf 'domain-id' in list 'domain'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:domain-id
 * @param k_dot1q_tsn_config_uni_cuc_id Ancestor key leaf 'cuc-id' in list 'cuc'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:cuc-id
 * @param k_dot1q_tsn_config_uni_stream_id Ancestor key leaf 'stream-id' in list 'stream'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:stream-id
 * @param k_dot1q_tsn_config_uni_index_2 Ancestor key leaf 'index' in list 'listener'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:listener/dot1q-tsn-config-uni:index
 * @return return status for the phase.
 */
extern status_t u_dot1q_tsn_config_uni_interface_capabilities_1_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_dot1q_tsn_config_uni_domain_id,
    const xmlChar *k_dot1q_tsn_config_uni_cuc_id,
    const xmlChar *k_dot1q_tsn_config_uni_stream_id,
    uint32 k_dot1q_tsn_config_uni_index_2);


/**
 * @brief Get database object callback for leaf accumulated-latency (getcb_fn2_t)\n
 * Path: leaf /tsn-uni/domain/cuc/stream/listener/accumulated-latency\n
 *
 * Fill in 'get2cb' response fields.
 *
 * @param get2cb GET2 control block for the callback.
 * @param k_dot1q_tsn_config_uni_domain_id Ancestor key leaf 'domain-id' in list 'domain'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:domain-id
 * @param k_dot1q_tsn_config_uni_cuc_id Ancestor key leaf 'cuc-id' in list 'cuc'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:cuc-id
 * @param k_dot1q_tsn_config_uni_stream_id Ancestor key leaf 'stream-id' in list 'stream'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:stream-id
 * @param k_dot1q_tsn_config_uni_index_2 Ancestor key leaf 'index' in list 'listener'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:listener/dot1q-tsn-config-uni:index
 * @return return status of the callback.
 */
extern status_t u_dot1q_tsn_config_uni_accumulated_latency_1_get (
    getcb_get2_t *get2cb,
    const xmlChar *k_dot1q_tsn_config_uni_domain_id,
    const xmlChar *k_dot1q_tsn_config_uni_cuc_id,
    const xmlChar *k_dot1q_tsn_config_uni_stream_id,
    uint32 k_dot1q_tsn_config_uni_index_2);


/**
 * @brief Get database object callback for container ieee802-mac-addresses (getcb_fn2_t)\n
 * Path: container /tsn-uni/domain/cuc/stream/listener/interface-configuration/interface-list/config-list/config-value/ieee802-mac-addresses/ieee802-mac-addresses\n
 *
 * Fill in 'get2cb' response fields.
 *
 * @param get2cb GET2 control block for the callback.
 * @param k_dot1q_tsn_config_uni_domain_id Ancestor key leaf 'domain-id' in list 'domain'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:domain-id
 * @param k_dot1q_tsn_config_uni_cuc_id Ancestor key leaf 'cuc-id' in list 'cuc'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:cuc-id
 * @param k_dot1q_tsn_config_uni_stream_id Ancestor key leaf 'stream-id' in list 'stream'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:stream-id
 * @param k_dot1q_tsn_config_uni_index_2 Ancestor key leaf 'index' in list 'listener'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:listener/dot1q-tsn-config-uni:index
 * @param k_dot1q_tsn_config_uni_mac_address_3 Ancestor key leaf 'mac-address' in list 'interface-list'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:listener/dot1q-tsn-config-uni:interface-configuration/dot1q-tsn-config-uni:interface-list/dot1q-tsn-config-uni:mac-address
 * @param k_dot1q_tsn_config_uni_interface_name_3 Ancestor key leaf 'interface-name' in list 'interface-list'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:listener/dot1q-tsn-config-uni:interface-configuration/dot1q-tsn-config-uni:interface-list/dot1q-tsn-config-uni:interface-name
 * @param k_dot1q_tsn_config_uni_index_3 Ancestor key leaf 'index' in list 'config-list'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:listener/dot1q-tsn-config-uni:interface-configuration/dot1q-tsn-config-uni:interface-list/dot1q-tsn-config-uni:config-list/dot1q-tsn-config-uni:index
 * @return return status of the callback.
 */
extern status_t u_dot1q_tsn_config_uni_ieee802_mac_addresses_5_get (
    getcb_get2_t *get2cb,
    const xmlChar *k_dot1q_tsn_config_uni_domain_id,
    const xmlChar *k_dot1q_tsn_config_uni_cuc_id,
    const xmlChar *k_dot1q_tsn_config_uni_stream_id,
    uint32 k_dot1q_tsn_config_uni_index_2,
    const xmlChar *k_dot1q_tsn_config_uni_mac_address_3,
    const xmlChar *k_dot1q_tsn_config_uni_interface_name_3,
    uint8 k_dot1q_tsn_config_uni_index_3);


/**
 * @brief Get database object callback for container ieee802-vlan-tag (getcb_fn2_t)\n
 * Path: container /tsn-uni/domain/cuc/stream/listener/interface-configuration/interface-list/config-list/config-value/ieee802-vlan-tag/ieee802-vlan-tag\n
 *
 * Fill in 'get2cb' response fields.
 *
 * @param get2cb GET2 control block for the callback.
 * @param k_dot1q_tsn_config_uni_domain_id Ancestor key leaf 'domain-id' in list 'domain'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:domain-id
 * @param k_dot1q_tsn_config_uni_cuc_id Ancestor key leaf 'cuc-id' in list 'cuc'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:cuc-id
 * @param k_dot1q_tsn_config_uni_stream_id Ancestor key leaf 'stream-id' in list 'stream'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:stream-id
 * @param k_dot1q_tsn_config_uni_index_2 Ancestor key leaf 'index' in list 'listener'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:listener/dot1q-tsn-config-uni:index
 * @param k_dot1q_tsn_config_uni_mac_address_3 Ancestor key leaf 'mac-address' in list 'interface-list'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:listener/dot1q-tsn-config-uni:interface-configuration/dot1q-tsn-config-uni:interface-list/dot1q-tsn-config-uni:mac-address
 * @param k_dot1q_tsn_config_uni_interface_name_3 Ancestor key leaf 'interface-name' in list 'interface-list'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:listener/dot1q-tsn-config-uni:interface-configuration/dot1q-tsn-config-uni:interface-list/dot1q-tsn-config-uni:interface-name
 * @param k_dot1q_tsn_config_uni_index_3 Ancestor key leaf 'index' in list 'config-list'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:listener/dot1q-tsn-config-uni:interface-configuration/dot1q-tsn-config-uni:interface-list/dot1q-tsn-config-uni:config-list/dot1q-tsn-config-uni:index
 * @return return status of the callback.
 */
extern status_t u_dot1q_tsn_config_uni_ieee802_vlan_tag_5_get (
    getcb_get2_t *get2cb,
    const xmlChar *k_dot1q_tsn_config_uni_domain_id,
    const xmlChar *k_dot1q_tsn_config_uni_cuc_id,
    const xmlChar *k_dot1q_tsn_config_uni_stream_id,
    uint32 k_dot1q_tsn_config_uni_index_2,
    const xmlChar *k_dot1q_tsn_config_uni_mac_address_3,
    const xmlChar *k_dot1q_tsn_config_uni_interface_name_3,
    uint8 k_dot1q_tsn_config_uni_index_3);


/**
 * @brief Get database object callback for container ipv4-tuple (getcb_fn2_t)\n
 * Path: container /tsn-uni/domain/cuc/stream/listener/interface-configuration/interface-list/config-list/config-value/ipv4-tuple/ipv4-tuple\n
 *
 * Fill in 'get2cb' response fields.
 *
 * @param get2cb GET2 control block for the callback.
 * @param k_dot1q_tsn_config_uni_domain_id Ancestor key leaf 'domain-id' in list 'domain'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:domain-id
 * @param k_dot1q_tsn_config_uni_cuc_id Ancestor key leaf 'cuc-id' in list 'cuc'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:cuc-id
 * @param k_dot1q_tsn_config_uni_stream_id Ancestor key leaf 'stream-id' in list 'stream'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:stream-id
 * @param k_dot1q_tsn_config_uni_index_2 Ancestor key leaf 'index' in list 'listener'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:listener/dot1q-tsn-config-uni:index
 * @param k_dot1q_tsn_config_uni_mac_address_3 Ancestor key leaf 'mac-address' in list 'interface-list'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:listener/dot1q-tsn-config-uni:interface-configuration/dot1q-tsn-config-uni:interface-list/dot1q-tsn-config-uni:mac-address
 * @param k_dot1q_tsn_config_uni_interface_name_3 Ancestor key leaf 'interface-name' in list 'interface-list'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:listener/dot1q-tsn-config-uni:interface-configuration/dot1q-tsn-config-uni:interface-list/dot1q-tsn-config-uni:interface-name
 * @param k_dot1q_tsn_config_uni_index_3 Ancestor key leaf 'index' in list 'config-list'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:listener/dot1q-tsn-config-uni:interface-configuration/dot1q-tsn-config-uni:interface-list/dot1q-tsn-config-uni:config-list/dot1q-tsn-config-uni:index
 * @return return status of the callback.
 */
extern status_t u_dot1q_tsn_config_uni_ipv4_tuple_5_get (
    getcb_get2_t *get2cb,
    const xmlChar *k_dot1q_tsn_config_uni_domain_id,
    const xmlChar *k_dot1q_tsn_config_uni_cuc_id,
    const xmlChar *k_dot1q_tsn_config_uni_stream_id,
    uint32 k_dot1q_tsn_config_uni_index_2,
    const xmlChar *k_dot1q_tsn_config_uni_mac_address_3,
    const xmlChar *k_dot1q_tsn_config_uni_interface_name_3,
    uint8 k_dot1q_tsn_config_uni_index_3);


/**
 * @brief Get database object callback for container ipv6-tuple (getcb_fn2_t)\n
 * Path: container /tsn-uni/domain/cuc/stream/listener/interface-configuration/interface-list/config-list/config-value/ipv6-tuple/ipv6-tuple\n
 *
 * Fill in 'get2cb' response fields.
 *
 * @param get2cb GET2 control block for the callback.
 * @param k_dot1q_tsn_config_uni_domain_id Ancestor key leaf 'domain-id' in list 'domain'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:domain-id
 * @param k_dot1q_tsn_config_uni_cuc_id Ancestor key leaf 'cuc-id' in list 'cuc'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:cuc-id
 * @param k_dot1q_tsn_config_uni_stream_id Ancestor key leaf 'stream-id' in list 'stream'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:stream-id
 * @param k_dot1q_tsn_config_uni_index_2 Ancestor key leaf 'index' in list 'listener'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:listener/dot1q-tsn-config-uni:index
 * @param k_dot1q_tsn_config_uni_mac_address_3 Ancestor key leaf 'mac-address' in list 'interface-list'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:listener/dot1q-tsn-config-uni:interface-configuration/dot1q-tsn-config-uni:interface-list/dot1q-tsn-config-uni:mac-address
 * @param k_dot1q_tsn_config_uni_interface_name_3 Ancestor key leaf 'interface-name' in list 'interface-list'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:listener/dot1q-tsn-config-uni:interface-configuration/dot1q-tsn-config-uni:interface-list/dot1q-tsn-config-uni:interface-name
 * @param k_dot1q_tsn_config_uni_index_3 Ancestor key leaf 'index' in list 'config-list'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:listener/dot1q-tsn-config-uni:interface-configuration/dot1q-tsn-config-uni:interface-list/dot1q-tsn-config-uni:config-list/dot1q-tsn-config-uni:index
 * @return return status of the callback.
 */
extern status_t u_dot1q_tsn_config_uni_ipv6_tuple_5_get (
    getcb_get2_t *get2cb,
    const xmlChar *k_dot1q_tsn_config_uni_domain_id,
    const xmlChar *k_dot1q_tsn_config_uni_cuc_id,
    const xmlChar *k_dot1q_tsn_config_uni_stream_id,
    uint32 k_dot1q_tsn_config_uni_index_2,
    const xmlChar *k_dot1q_tsn_config_uni_mac_address_3,
    const xmlChar *k_dot1q_tsn_config_uni_interface_name_3,
    uint8 k_dot1q_tsn_config_uni_index_3);


/**
 * @brief Get database object callback for choice config-value (getcb_fn2_t)\n
 * Path: choice /tsn-uni/domain/cuc/stream/listener/interface-configuration/interface-list/config-list/config-value\n
 *
 * Fill in 'get2cb' response fields.
 *
 * @param get2cb GET2 control block for the callback.
 * @param k_dot1q_tsn_config_uni_domain_id Ancestor key leaf 'domain-id' in list 'domain'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:domain-id
 * @param k_dot1q_tsn_config_uni_cuc_id Ancestor key leaf 'cuc-id' in list 'cuc'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:cuc-id
 * @param k_dot1q_tsn_config_uni_stream_id Ancestor key leaf 'stream-id' in list 'stream'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:stream-id
 * @param k_dot1q_tsn_config_uni_index_2 Ancestor key leaf 'index' in list 'listener'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:listener/dot1q-tsn-config-uni:index
 * @param k_dot1q_tsn_config_uni_mac_address_3 Ancestor key leaf 'mac-address' in list 'interface-list'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:listener/dot1q-tsn-config-uni:interface-configuration/dot1q-tsn-config-uni:interface-list/dot1q-tsn-config-uni:mac-address
 * @param k_dot1q_tsn_config_uni_interface_name_3 Ancestor key leaf 'interface-name' in list 'interface-list'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:listener/dot1q-tsn-config-uni:interface-configuration/dot1q-tsn-config-uni:interface-list/dot1q-tsn-config-uni:interface-name
 * @param k_dot1q_tsn_config_uni_index_3 Ancestor key leaf 'index' in list 'config-list'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:listener/dot1q-tsn-config-uni:interface-configuration/dot1q-tsn-config-uni:interface-list/dot1q-tsn-config-uni:config-list/dot1q-tsn-config-uni:index
 * @return return status of the callback.
 */
extern status_t u_dot1q_tsn_config_uni_config_value_1_get (
    getcb_get2_t *get2cb,
    const xmlChar *k_dot1q_tsn_config_uni_domain_id,
    const xmlChar *k_dot1q_tsn_config_uni_cuc_id,
    const xmlChar *k_dot1q_tsn_config_uni_stream_id,
    uint32 k_dot1q_tsn_config_uni_index_2,
    const xmlChar *k_dot1q_tsn_config_uni_mac_address_3,
    const xmlChar *k_dot1q_tsn_config_uni_interface_name_3,
    uint8 k_dot1q_tsn_config_uni_index_3);


/**
 * @brief Get database object callback for list config-list (getcb_fn2_t)\n
 * Path: list /tsn-uni/domain/cuc/stream/listener/interface-configuration/interface-list/config-list\n
 *
 * Fill in 'get2cb' response fields.
 *
 * @param get2cb GET2 control block for the callback.
 * @param k_dot1q_tsn_config_uni_domain_id Ancestor key leaf 'domain-id' in list 'domain'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:domain-id
 * @param k_dot1q_tsn_config_uni_cuc_id Ancestor key leaf 'cuc-id' in list 'cuc'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:cuc-id
 * @param k_dot1q_tsn_config_uni_stream_id Ancestor key leaf 'stream-id' in list 'stream'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:stream-id
 * @param k_dot1q_tsn_config_uni_index_2 Ancestor key leaf 'index' in list 'listener'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:listener/dot1q-tsn-config-uni:index
 * @param k_dot1q_tsn_config_uni_mac_address_3 Ancestor key leaf 'mac-address' in list 'interface-list'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:listener/dot1q-tsn-config-uni:interface-configuration/dot1q-tsn-config-uni:interface-list/dot1q-tsn-config-uni:mac-address
 * @param k_dot1q_tsn_config_uni_interface_name_3 Ancestor key leaf 'interface-name' in list 'interface-list'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:listener/dot1q-tsn-config-uni:interface-configuration/dot1q-tsn-config-uni:interface-list/dot1q-tsn-config-uni:interface-name
 * @param k_dot1q_tsn_config_uni_index_3 Local key leaf 'index' in list 'config-list'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:listener/dot1q-tsn-config-uni:interface-configuration/dot1q-tsn-config-uni:interface-list/dot1q-tsn-config-uni:config-list/dot1q-tsn-config-uni:index
 * @param index_fixed TRUE if this key is fixed in a getnext request.
 * @param index_present TRUE if this key is present and 'k_dot1q_tsn_config_uni_index_3' is valid.\n
 * FALSE to get first in a getnext request.
 * @return return status of the callback.
 */
extern status_t u_dot1q_tsn_config_uni_config_list_1_get (
    getcb_get2_t *get2cb,
    const xmlChar *k_dot1q_tsn_config_uni_domain_id,
    const xmlChar *k_dot1q_tsn_config_uni_cuc_id,
    const xmlChar *k_dot1q_tsn_config_uni_stream_id,
    uint32 k_dot1q_tsn_config_uni_index_2,
    const xmlChar *k_dot1q_tsn_config_uni_mac_address_3,
    const xmlChar *k_dot1q_tsn_config_uni_interface_name_3,
    uint8 k_dot1q_tsn_config_uni_index_3,
    boolean index_fixed,
    boolean index_present);


/**
 * @brief Get database object callback for list interface-list (getcb_fn2_t)\n
 * Path: list /tsn-uni/domain/cuc/stream/listener/interface-configuration/interface-list\n
 *
 * Fill in 'get2cb' response fields.
 *
 * @param get2cb GET2 control block for the callback.
 * @param k_dot1q_tsn_config_uni_domain_id Ancestor key leaf 'domain-id' in list 'domain'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:domain-id
 * @param k_dot1q_tsn_config_uni_cuc_id Ancestor key leaf 'cuc-id' in list 'cuc'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:cuc-id
 * @param k_dot1q_tsn_config_uni_stream_id Ancestor key leaf 'stream-id' in list 'stream'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:stream-id
 * @param k_dot1q_tsn_config_uni_index_2 Ancestor key leaf 'index' in list 'listener'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:listener/dot1q-tsn-config-uni:index
 * @param k_dot1q_tsn_config_uni_mac_address_3 Local key leaf 'mac-address' in list 'interface-list'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:listener/dot1q-tsn-config-uni:interface-configuration/dot1q-tsn-config-uni:interface-list/dot1q-tsn-config-uni:mac-address
 * @param mac_address_fixed TRUE if this key is fixed in a getnext request.
 * @param mac_address_present TRUE if this key is present and 'k_dot1q_tsn_config_uni_mac_address_3' is valid.\n
 * FALSE to get first in a getnext request.
 * @param k_dot1q_tsn_config_uni_interface_name_3 Local key leaf 'interface-name' in list 'interface-list'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:listener/dot1q-tsn-config-uni:interface-configuration/dot1q-tsn-config-uni:interface-list/dot1q-tsn-config-uni:interface-name
 * @param interface_name_fixed TRUE if this key is fixed in a getnext request.
 * @param interface_name_present TRUE if this key is present and 'k_dot1q_tsn_config_uni_interface_name_3' is valid.\n
 * FALSE to get first in a getnext request.
 * @return return status of the callback.
 */
extern status_t u_dot1q_tsn_config_uni_interface_list_1_get (
    getcb_get2_t *get2cb,
    const xmlChar *k_dot1q_tsn_config_uni_domain_id,
    const xmlChar *k_dot1q_tsn_config_uni_cuc_id,
    const xmlChar *k_dot1q_tsn_config_uni_stream_id,
    uint32 k_dot1q_tsn_config_uni_index_2,
    const xmlChar *k_dot1q_tsn_config_uni_mac_address_3,
    boolean mac_address_fixed,
    boolean mac_address_present,
    const xmlChar *k_dot1q_tsn_config_uni_interface_name_3,
    boolean interface_name_fixed,
    boolean interface_name_present);


/**
 * @brief Get database object callback for container interface-configuration (getcb_fn2_t)\n
 * Path: container /tsn-uni/domain/cuc/stream/listener/interface-configuration\n
 *
 * Fill in 'get2cb' response fields.
 *
 * @param get2cb GET2 control block for the callback.
 * @param k_dot1q_tsn_config_uni_domain_id Ancestor key leaf 'domain-id' in list 'domain'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:domain-id
 * @param k_dot1q_tsn_config_uni_cuc_id Ancestor key leaf 'cuc-id' in list 'cuc'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:cuc-id
 * @param k_dot1q_tsn_config_uni_stream_id Ancestor key leaf 'stream-id' in list 'stream'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:stream-id
 * @param k_dot1q_tsn_config_uni_index_2 Ancestor key leaf 'index' in list 'listener'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:listener/dot1q-tsn-config-uni:index
 * @return return status of the callback.
 */
extern status_t u_dot1q_tsn_config_uni_interface_configuration_1_get (
    getcb_get2_t *get2cb,
    const xmlChar *k_dot1q_tsn_config_uni_domain_id,
    const xmlChar *k_dot1q_tsn_config_uni_cuc_id,
    const xmlChar *k_dot1q_tsn_config_uni_stream_id,
    uint32 k_dot1q_tsn_config_uni_index_2);


/**
 * @brief Edit database object callback (agt_cb_fn_t)\n
 * Path: list /tsn-uni/domain/cuc/stream/listener
 *
 * @param scb session control block making the request
 * @param msg message in progress for this edit request
 * @param cbtyp callback type for this callback
 * @param editop the parent edit-config operation type,
 * which is also used for all other callbacks
 * that operate on objects.
 * @param newval container object holding the proposed changes
 * to apply to the current config, depending on
 * the editop value. Will not be NULL.
 * @param curval current container values from the "<running>"
 * or "<candidate>" configuration, if any. Could be NULL
 * for create and other operations.
 * @param k_dot1q_tsn_config_uni_domain_id Ancestor key leaf 'domain-id' in list 'domain'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:domain-id
 * @param k_dot1q_tsn_config_uni_cuc_id Ancestor key leaf 'cuc-id' in list 'cuc'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:cuc-id
 * @param k_dot1q_tsn_config_uni_stream_id Ancestor key leaf 'stream-id' in list 'stream'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:stream-id
 * @param k_dot1q_tsn_config_uni_index_2 Local key leaf 'index' in list 'listener'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:listener/dot1q-tsn-config-uni:index
 * @return return status for the phase.
 */
extern status_t u_dot1q_tsn_config_uni_listener_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_dot1q_tsn_config_uni_domain_id,
    const xmlChar *k_dot1q_tsn_config_uni_cuc_id,
    const xmlChar *k_dot1q_tsn_config_uni_stream_id,
    uint32 k_dot1q_tsn_config_uni_index_2);


/**
 * @brief Get database object callback for container status-info (getcb_fn2_t)\n
 * Path: container /tsn-uni/domain/cuc/stream/status-info\n
 *
 * Fill in 'get2cb' response fields.
 *
 * @param get2cb GET2 control block for the callback.
 * @param k_dot1q_tsn_config_uni_domain_id Ancestor key leaf 'domain-id' in list 'domain'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:domain-id
 * @param k_dot1q_tsn_config_uni_cuc_id Ancestor key leaf 'cuc-id' in list 'cuc'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:cuc-id
 * @param k_dot1q_tsn_config_uni_stream_id Ancestor key leaf 'stream-id' in list 'stream'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:stream-id
 * @return return status of the callback.
 */
extern status_t u_dot1q_tsn_config_uni_status_info_get (
    getcb_get2_t *get2cb,
    const xmlChar *k_dot1q_tsn_config_uni_domain_id,
    const xmlChar *k_dot1q_tsn_config_uni_cuc_id,
    const xmlChar *k_dot1q_tsn_config_uni_stream_id);


/**
 * @brief Get database object callback for list failed-interfaces (getcb_fn2_t)\n
 * Path: list /tsn-uni/domain/cuc/stream/failed-interfaces\n
 *
 * Fill in 'get2cb' response fields.
 *
 * @param get2cb GET2 control block for the callback.
 * @param k_dot1q_tsn_config_uni_domain_id Ancestor key leaf 'domain-id' in list 'domain'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:domain-id
 * @param k_dot1q_tsn_config_uni_cuc_id Ancestor key leaf 'cuc-id' in list 'cuc'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:cuc-id
 * @param k_dot1q_tsn_config_uni_stream_id Ancestor key leaf 'stream-id' in list 'stream'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:stream-id
 * @param k_dot1q_tsn_config_uni_mac_address_4 Local key leaf 'mac-address' in list 'failed-interfaces'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:failed-interfaces/dot1q-tsn-config-uni:mac-address
 * @param mac_address_fixed TRUE if this key is fixed in a getnext request.
 * @param mac_address_present TRUE if this key is present and 'k_dot1q_tsn_config_uni_mac_address_4' is valid.\n
 * FALSE to get first in a getnext request.
 * @param k_dot1q_tsn_config_uni_interface_name_4 Local key leaf 'interface-name' in list 'failed-interfaces'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:failed-interfaces/dot1q-tsn-config-uni:interface-name
 * @param interface_name_fixed TRUE if this key is fixed in a getnext request.
 * @param interface_name_present TRUE if this key is present and 'k_dot1q_tsn_config_uni_interface_name_4' is valid.\n
 * FALSE to get first in a getnext request.
 * @return return status of the callback.
 */
extern status_t u_dot1q_tsn_config_uni_failed_interfaces_get (
    getcb_get2_t *get2cb,
    const xmlChar *k_dot1q_tsn_config_uni_domain_id,
    const xmlChar *k_dot1q_tsn_config_uni_cuc_id,
    const xmlChar *k_dot1q_tsn_config_uni_stream_id,
    const xmlChar *k_dot1q_tsn_config_uni_mac_address_4,
    boolean mac_address_fixed,
    boolean mac_address_present,
    const xmlChar *k_dot1q_tsn_config_uni_interface_name_4,
    boolean interface_name_fixed,
    boolean interface_name_present);


/**
 * @brief Edit database object callback (agt_cb_fn_t)\n
 * Path: list /tsn-uni/domain/cuc/stream
 *
 * @param scb session control block making the request
 * @param msg message in progress for this edit request
 * @param cbtyp callback type for this callback
 * @param editop the parent edit-config operation type,
 * which is also used for all other callbacks
 * that operate on objects.
 * @param newval container object holding the proposed changes
 * to apply to the current config, depending on
 * the editop value. Will not be NULL.
 * @param curval current container values from the "<running>"
 * or "<candidate>" configuration, if any. Could be NULL
 * for create and other operations.
 * @param k_dot1q_tsn_config_uni_domain_id Ancestor key leaf 'domain-id' in list 'domain'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:domain-id
 * @param k_dot1q_tsn_config_uni_cuc_id Ancestor key leaf 'cuc-id' in list 'cuc'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:cuc-id
 * @param k_dot1q_tsn_config_uni_stream_id Local key leaf 'stream-id' in list 'stream'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:stream/dot1q-tsn-config-uni:stream-id
 * @return return status for the phase.
 */
extern status_t u_dot1q_tsn_config_uni_stream_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_dot1q_tsn_config_uni_domain_id,
    const xmlChar *k_dot1q_tsn_config_uni_cuc_id,
    const xmlChar *k_dot1q_tsn_config_uni_stream_id);


/**
 * @brief YANG 1.1 action validate callback. (agt_action_cb_t)\n
 * Path: /tsn-uni/domain/cuc/remove_streams
 *
 * @param scb session invoking the "<action>" RPC
 * @param msg message in progress for this "<rpc>" request
 * @param methnode XML node for the operation, which can be used
 * in error reporting (or ignored).
 * @param actionval the nested 'action-method-name' node that was parsed
 * within the topval subtree, in the RPC "<action>" request.
 * This is used to help derive the list keys.
 * @param k_dot1q_tsn_config_uni_domain_id Ancestor key leaf 'domain-id' in list 'domain'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:domain-id
 * @param k_dot1q_tsn_config_uni_cuc_id Ancestor key leaf 'cuc-id' in list 'cuc'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:cuc-id
 * @return return status for the phase.
 *  - An error in validate phase will cancel invoke phase
 *  - An rpc-error will be added if an error is returned and
 * the msg error Q is empty
 */
extern status_t u_remove_streams_action_val (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    xml_node_t *methnode,
    val_value_t *actionval,
    const xmlChar *k_dot1q_tsn_config_uni_domain_id,
    const xmlChar *k_dot1q_tsn_config_uni_cuc_id);


/**
 * @brief YANG 1.1 action invoke callback. (agt_action_cb_t)\n
 * Path: /tsn-uni/domain/cuc/remove_streams
 *
 * @param scb session invoking the "<action>" RPC
 * @param msg message in progress for this "<rpc>" request
 * @param methnode XML node for the operation, which can be used
 * in error reporting (or ignored).
 * @param actionval the nested 'action-method-name' node that was parsed
 * within the topval subtree, in the RPC "<action>" request.
 * This is used to help derive the list keys.
 * @param k_dot1q_tsn_config_uni_domain_id Ancestor key leaf 'domain-id' in list 'domain'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:domain-id
 * @param k_dot1q_tsn_config_uni_cuc_id Ancestor key leaf 'cuc-id' in list 'cuc'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:cuc-id
 * @return return status for the phase.
 *  - An error in validate phase will cancel invoke phase
 *  - An rpc-error will be added if an error is returned and
 * the msg error Q is empty
 */
extern status_t u_remove_streams_action_inv (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    xml_node_t *methnode,
    val_value_t *actionval,
    const xmlChar *k_dot1q_tsn_config_uni_domain_id,
    const xmlChar *k_dot1q_tsn_config_uni_cuc_id);


/**
 * @brief Edit database object callback (agt_cb_fn_t)\n
 * Path: list /tsn-uni/domain/cuc
 *
 * @param scb session control block making the request
 * @param msg message in progress for this edit request
 * @param cbtyp callback type for this callback
 * @param editop the parent edit-config operation type,
 * which is also used for all other callbacks
 * that operate on objects.
 * @param newval container object holding the proposed changes
 * to apply to the current config, depending on
 * the editop value. Will not be NULL.
 * @param curval current container values from the "<running>"
 * or "<candidate>" configuration, if any. Could be NULL
 * for create and other operations.
 * @param k_dot1q_tsn_config_uni_domain_id Ancestor key leaf 'domain-id' in list 'domain'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:domain-id
 * @param k_dot1q_tsn_config_uni_cuc_id Local key leaf 'cuc-id' in list 'cuc'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:cuc/dot1q-tsn-config-uni:cuc-id
 * @return return status for the phase.
 */
extern status_t u_dot1q_tsn_config_uni_cuc_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_dot1q_tsn_config_uni_domain_id,
    const xmlChar *k_dot1q_tsn_config_uni_cuc_id);


/**
 * @brief Edit database object callback (agt_cb_fn_t)\n
 * Path: list /tsn-uni/domain
 *
 * @param scb session control block making the request
 * @param msg message in progress for this edit request
 * @param cbtyp callback type for this callback
 * @param editop the parent edit-config operation type,
 * which is also used for all other callbacks
 * that operate on objects.
 * @param newval container object holding the proposed changes
 * to apply to the current config, depending on
 * the editop value. Will not be NULL.
 * @param curval current container values from the "<running>"
 * or "<candidate>" configuration, if any. Could be NULL
 * for create and other operations.
 * @param k_dot1q_tsn_config_uni_domain_id Local key leaf 'domain-id' in list 'domain'\n
 * Path: /dot1q-tsn-config-uni:tsn-uni/dot1q-tsn-config-uni:domain/dot1q-tsn-config-uni:domain-id
 * @return return status for the phase.
 */
extern status_t u_dot1q_tsn_config_uni_domain_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_dot1q_tsn_config_uni_domain_id);


/**
 * @brief Edit database object callback (agt_cb_fn_t)\n
 * Path: container /tsn-uni
 *
 * @param scb session control block making the request
 * @param msg message in progress for this edit request
 * @param cbtyp callback type for this callback
 * @param editop the parent edit-config operation type,
 * which is also used for all other callbacks
 * that operate on objects.
 * @param newval container object holding the proposed changes
 * to apply to the current config, depending on
 * the editop value. Will not be NULL.
 * @param curval current container values from the "<running>"
 * or "<candidate>" configuration, if any. Could be NULL
 * for create and other operations.
 * @return return status for the phase.
 */
extern status_t u_dot1q_tsn_config_uni_tsn_uni_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval);


/**
 * @brief Validation phase callback for "<compute_streams>" operation. (agt_rpc_method_t)
 *
 * All YANG constraints have passed at this point.
 * Add description-stmt checks in this function.
 *
 * @param scb session invoking the RPC operation.
 * @param msg message in progress for this <rpc> request.
 * The msg->rpc_input value node contains the input (if any).
 * It is a container matching the rpc/input node for the YANG rpc.
 * @param methnode XML node for the operation, which can be used
 * in error reporting (or ignored).
 * @return return status for the phase.
 *  - An error in validate phase will cancel invoke phase
 *  - An rpc-error will be added if an error is returned and
 * the msg error Q is empty
 */
extern status_t u_dot1q_tsn_config_uni_compute_streams_validate (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    xml_node_t *methnode);


/**
 * @brief Invocation phase callback for "<compute_streams>" operation. (agt_rpc_method_t)
 *
 * Validation callback has passed at this point.
 * Call device instrumentation code in this function.
 *
 * @param scb session invoking the RPC operation.
 * @param msg message in progress for this <rpc> request.
 * The msg->rpc_input value node contains the input (if any).
 * It is a container matching the rpc/input node for the YANG rpc.
 * @param methnode XML node for the operation, which can be used
 * in error reporting (or ignored).
 * @return return status for the phase.
 *  - An error in validate phase will cancel invoke phase
 *  - An rpc-error will be added if an error is returned and
 * the msg error Q is empty
 */
extern status_t u_dot1q_tsn_config_uni_compute_streams_invoke (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    xml_node_t *methnode);


/**
 * @brief Validation phase callback for "<compute_planned_and_modified_streams>" operation. (agt_rpc_method_t)
 *
 * All YANG constraints have passed at this point.
 * Add description-stmt checks in this function.
 *
 * @param scb session invoking the RPC operation.
 * @param msg message in progress for this <rpc> request.
 * The msg->rpc_input value node contains the input (if any).
 * It is a container matching the rpc/input node for the YANG rpc.
 * @param methnode XML node for the operation, which can be used
 * in error reporting (or ignored).
 * @return return status for the phase.
 *  - An error in validate phase will cancel invoke phase
 *  - An rpc-error will be added if an error is returned and
 * the msg error Q is empty
 */
extern status_t u_dot1q_tsn_config_uni_compute_planned_and_modified_streams_validate (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    xml_node_t *methnode);


/**
 * @brief Invocation phase callback for "<compute_planned_and_modified_streams>" operation. (agt_rpc_method_t)
 *
 * Validation callback has passed at this point.
 * Call device instrumentation code in this function.
 *
 * @param scb session invoking the RPC operation.
 * @param msg message in progress for this <rpc> request.
 * The msg->rpc_input value node contains the input (if any).
 * It is a container matching the rpc/input node for the YANG rpc.
 * @param methnode XML node for the operation, which can be used
 * in error reporting (or ignored).
 * @return return status for the phase.
 *  - An error in validate phase will cancel invoke phase
 *  - An rpc-error will be added if an error is returned and
 * the msg error Q is empty
 */
extern status_t u_dot1q_tsn_config_uni_compute_planned_and_modified_streams_invoke (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    xml_node_t *methnode);


/**
 * @brief Validation phase callback for "<compute_all_streams>" operation. (agt_rpc_method_t)
 *
 * All YANG constraints have passed at this point.
 * Add description-stmt checks in this function.
 *
 * @param scb session invoking the RPC operation.
 * @param msg message in progress for this <rpc> request.
 * The msg->rpc_input value node contains the input (if any).
 * It is a container matching the rpc/input node for the YANG rpc.
 * @param methnode XML node for the operation, which can be used
 * in error reporting (or ignored).
 * @return return status for the phase.
 *  - An error in validate phase will cancel invoke phase
 *  - An rpc-error will be added if an error is returned and
 * the msg error Q is empty
 */
extern status_t u_dot1q_tsn_config_uni_compute_all_streams_validate (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    xml_node_t *methnode);


/**
 * @brief Invocation phase callback for "<compute_all_streams>" operation. (agt_rpc_method_t)
 *
 * Validation callback has passed at this point.
 * Call device instrumentation code in this function.
 *
 * @param scb session invoking the RPC operation.
 * @param msg message in progress for this <rpc> request.
 * The msg->rpc_input value node contains the input (if any).
 * It is a container matching the rpc/input node for the YANG rpc.
 * @param methnode XML node for the operation, which can be used
 * in error reporting (or ignored).
 * @return return status for the phase.
 *  - An error in validate phase will cancel invoke phase
 *  - An rpc-error will be added if an error is returned and
 * the msg error Q is empty
 */
extern status_t u_dot1q_tsn_config_uni_compute_all_streams_invoke (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    xml_node_t *methnode);


/**
 * @brief Validation phase callback for "<request_domain_id>" operation. (agt_rpc_method_t)
 *
 * All YANG constraints have passed at this point.
 * Add description-stmt checks in this function.
 *
 * @param scb session invoking the RPC operation.
 * @param msg message in progress for this <rpc> request.
 * The msg->rpc_input value node contains the input (if any).
 * It is a container matching the rpc/input node for the YANG rpc.
 * @param methnode XML node for the operation, which can be used
 * in error reporting (or ignored).
 * @return return status for the phase.
 *  - An error in validate phase will cancel invoke phase
 *  - An rpc-error will be added if an error is returned and
 * the msg error Q is empty
 */
extern status_t u_dot1q_tsn_config_uni_request_domain_id_validate (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    xml_node_t *methnode);


/**
 * @brief Invocation phase callback for "<request_domain_id>" operation. (agt_rpc_method_t)
 *
 * Validation callback has passed at this point.
 * Call device instrumentation code in this function.
 *
 * @param scb session invoking the RPC operation.
 * @param msg message in progress for this <rpc> request.
 * The msg->rpc_input value node contains the input (if any).
 * It is a container matching the rpc/input node for the YANG rpc.
 * @param methnode XML node for the operation, which can be used
 * in error reporting (or ignored).
 * @return return status for the phase.
 *  - An error in validate phase will cancel invoke phase
 *  - An rpc-error will be added if an error is returned and
 * the msg error Q is empty
 */
extern status_t u_dot1q_tsn_config_uni_request_domain_id_invoke (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    xml_node_t *methnode);


/**
 * @brief Validation phase callback for "<request_next_free_stream_id>" operation. (agt_rpc_method_t)
 *
 * All YANG constraints have passed at this point.
 * Add description-stmt checks in this function.
 *
 * @param scb session invoking the RPC operation.
 * @param msg message in progress for this <rpc> request.
 * The msg->rpc_input value node contains the input (if any).
 * It is a container matching the rpc/input node for the YANG rpc.
 * @param methnode XML node for the operation, which can be used
 * in error reporting (or ignored).
 * @return return status for the phase.
 *  - An error in validate phase will cancel invoke phase
 *  - An rpc-error will be added if an error is returned and
 * the msg error Q is empty
 */
extern status_t u_dot1q_tsn_config_uni_request_next_free_stream_id_validate (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    xml_node_t *methnode);


/**
 * @brief Invocation phase callback for "<request_next_free_stream_id>" operation. (agt_rpc_method_t)
 *
 * Validation callback has passed at this point.
 * Call device instrumentation code in this function.
 *
 * @param scb session invoking the RPC operation.
 * @param msg message in progress for this <rpc> request.
 * The msg->rpc_input value node contains the input (if any).
 * It is a container matching the rpc/input node for the YANG rpc.
 * @param methnode XML node for the operation, which can be used
 * in error reporting (or ignored).
 * @return return status for the phase.
 *  - An error in validate phase will cancel invoke phase
 *  - An rpc-error will be added if an error is returned and
 * the msg error Q is empty
 */
extern status_t u_dot1q_tsn_config_uni_request_next_free_stream_id_invoke (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    xml_node_t *methnode);


/**
 * @brief Send a "<configure_streams_completed>" notification.
 *
 * Called by your code when notification event occurs.
 *
 * This API is optional. It can be replaced with
 * any function of your choice that provides the same functionality.
 *
 * Create an internal notification message (agt_not_msg_t) and queue
 * it for delivery to client sessions.
 *
 * The parameters depend in the data definitions within the
 * notification-stmt for this event type.
 */
extern void u_dot1q_tsn_config_uni_configure_streams_completed_send (
    dlq_hdr_t *v_domain);


/**
 * @brief Phase 1: Initialize the ieee802-dot1q-tsn-config-uni server instrumentation library.
 *
 * Called by server when module is loaded.
 *
 * @param modname requested module name to load
 * @param revision requested revision date of the module to load.
 * This may be NULL if the module has no revision statements.
 * @return return status. An error will cause the module load to fail.
 */
extern status_t u_ieee802_dot1q_tsn_config_uni_init (
    const xmlChar *modname,
    const xmlChar *revision);


/**
 * @brief Phase 2: Initialize the ieee802-dot1q-tsn-config-uni server instrumentation library.
 *
 * SIL init phase 2: non-config data structures.
 * Called after running config is loaded.
 *
 * @return return status. An error will cause the
 * server initialization to fail.
 */
extern status_t u_ieee802_dot1q_tsn_config_uni_init2 (void);


/**
 * @brief Cleanup the ieee802-dot1q-tsn-config-uni server instrumentation library.
 *
 * Called by server when module is unloaded.
 *
 */
extern void u_ieee802_dot1q_tsn_config_uni_cleanup (void);


 /** @} */

#ifdef __cplusplus
} /* end extern 'C' */
#endif

#endif
